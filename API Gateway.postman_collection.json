{
	"info": {
		"_postman_id": "19dd2852-8367-4a1e-9b38-001da1a1edfc",
		"name": "API Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Generic",
			"item": [
				{
					"name": "✔️NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4eeed9f-42ef-4f2c-b75f-7684dbbec6b2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Code is NotFound\", function () {",
									"    pm.expect(jsonData.code).to.eql('NotFound');",
									"});",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"code\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"code\",",
									"    \"message\",",
									"    \"status\"",
									"  ]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️MethodNotAllowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30288b48-2ae5-44c6-ba68-917d78e4de64",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 405\", function () {",
									"    pm.response.to.have.status(405);",
									"});",
									"",
									"pm.test(\"Code is MethodNotAllowed\", function () {",
									"    pm.expect(jsonData.code).to.eql('MethodNotAllowed');",
									"});",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"code\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"code\",",
									"    \"message\",",
									"    \"status\"",
									"  ]",
									"};",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Swagger API doc.json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32e74b24-ef0e-4261-aadc-d55c1a02563a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/swagger/{{version}}.json",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"swagger",
								"{{version}}.json"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️APIVersioningError",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7d2b72b-37b7-499a-8a92-96ab677bebcc",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Code is MethodNotAllowed\", function () {",
									"    pm.expect(jsonData.code).to.eql('UnsupportedApiVersion');",
									"});",
									"",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"code\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"message\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"code\",",
									"    \"message\",",
									"    \"status\"",
									"  ]",
									"};",
									"",
									"var jsonData = pm.response.json();",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/v10/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v10",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Validation check (Empty Request Body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f03f33bb-1d55-4d1c-a7e9-cfcd915a295e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Validation failed message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.requestBody[0]).to.eql('A non-empty request body is required.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Validation check (Mandatory Fields)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2beaa719-7fd9-4217-bf8a-0f0d5891b250",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Mandatory fields check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.loginName[0]).to.eql(\"'Login Name' must not be empty.\");",
									"    pm.expect(jsonData.errors.password[0]).to.eql(\"'Password' must not be empty.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Validation check (Authentication Failed)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e6332259-56d5-4130-8686-7027c263e2f1",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Authentication Failed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql('AuthenticationFailed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"loginName\": \"THIS_IS_A_WRONG_LOGIN_NAME\",\n\t\"password\": \"THIS_IS_A_WRONG_PASSWORD\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Validation check (User has been disabled)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc79eeae-efac-4140-b57d-977f3f803188",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Authentication Failed\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.code).to.eql('AuthenticationFailed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"loginName\": \"api_test_user2\",\n\t\"password\": \"api_test_user2\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "✔️Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "758e19e2-0dc1-4c86-b0e8-6edd70558225",
								"exec": [
									"var jsonData = pm.response.json();",
									"console.log(jsonData);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"token\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"token\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"jwt\", jsonData.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"loginName\": \"wilson\",\n\t\"password\": \"123\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Authentication - reGenerate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2d1e8a5d-6e8a-4111-8016-9d516c21c0de",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"token\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"token\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"jwt\", jsonData.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication/token",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cff03f8c-6887-49e7-a383-adba37ce9a9f",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jwt\", jsonData.data);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication/otp?{{otp}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication",
								"otp"
							],
							"query": [
								{
									"key": "{{otp}}",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6517d5d2-92de-4697-afba-c176a896659e",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"otp\", jsonData.data.otp);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"74d1224b0135af1e973f8f19c8564156\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/authentication/otp",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"authentication",
								"otp"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "✔️Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "532c2775-520a-40a7-b5d6-b24ee2df21de",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"version\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"timestamp\": {",
									"      \"type\": \"string\"",
									"    },",
									"    \"status\": {",
									"      \"type\": \"string\"",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"version\",",
									"    \"timestamp\",",
									"    \"status\"",
									"  ]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/misc/version",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"misc",
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "576a4200-c162-4178-a860-76265cc97c4c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/misc/ping",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"misc",
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Folder",
					"item": [
						{
							"name": "✔️List sub-folders by path",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "351aa413-8ca8-4b30-be2b-ca6250cc5573",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
											"  \"$id\": \"http://example.com/root.json\",",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"$id\": \"#/properties/data/items\",",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"id\",",
											"          \"parentId\",",
											"          \"createTime\",",
											"          \"createUser\",",
											"          \"name\",",
											"          \"path\"",
											"        ],",
											"        \"properties\": {",
											"          \"id\": {",
											"            \"$id\": \"#/properties/data/items/properties/id\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"parentId\": {",
											"            \"$id\": \"#/properties/data/items/properties/parentId\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createTime\": {",
											"            \"$id\": \"#/properties/data/items/properties/createTime\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createUser\": {",
											"            \"$id\": \"#/properties/data/items/properties/createUser\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"name\": {",
											"            \"$id\": \"#/properties/data/items/properties/name\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"path\": {",
											"            \"$id\": \"#/properties/data/items/properties/path\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folders?path=",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folders"
									],
									"query": [
										{
											"key": "path",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️List sub-folders by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca31d5e0-59e3-4603-8be4-acd4cb8e2e5e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
											"  \"$id\": \"http://example.com/root.json\",",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"$id\": \"#/properties/data/items\",",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"id\",",
											"          \"parentId\",",
											"          \"createTime\",",
											"          \"createUser\",",
											"          \"name\",",
											"          \"path\"",
											"        ],",
											"        \"properties\": {",
											"          \"id\": {",
											"            \"$id\": \"#/properties/data/items/properties/id\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"parentId\": {",
											"            \"$id\": \"#/properties/data/items/properties/parentId\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createTime\": {",
											"            \"$id\": \"#/properties/data/items/properties/createTime\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createUser\": {",
											"            \"$id\": \"#/properties/data/items/properties/createUser\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"name\": {",
											"            \"$id\": \"#/properties/data/items/properties/name\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"path\": {",
											"            \"$id\": \"#/properties/data/items/properties/path\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folders?id=0c5d4887db28492fa23a6120562a9b47",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folders"
									],
									"query": [
										{
											"key": "id",
											"value": "0c5d4887db28492fa23a6120562a9b47"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get folder by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9caf5431-4d58-4a9d-9fd4-2dba0ec53e49",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
											"  \"$id\": \"http://example.com/root.json\",",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"$id\": \"#/properties/data/items\",",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"id\",",
											"          \"parentId\",",
											"          \"createTime\",",
											"          \"createUser\",",
											"          \"name\",",
											"          \"path\"",
											"        ],",
											"        \"properties\": {",
											"          \"id\": {",
											"            \"$id\": \"#/properties/data/items/properties/id\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"parentId\": {",
											"            \"$id\": \"#/properties/data/items/properties/parentId\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createTime\": {",
											"            \"$id\": \"#/properties/data/items/properties/createTime\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"createUser\": {",
											"            \"$id\": \"#/properties/data/items/properties/createUser\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"name\": {",
											"            \"$id\": \"#/properties/data/items/properties/name\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"path\": {",
											"            \"$id\": \"#/properties/data/items/properties/path\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('dda869acfb804e6a87b9155dcccff321')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('dda869acfb804e6a87b9155dcccff321')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "674763be-9dd2-411c-b3a7-5decc6bb32e3",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"parentId\",",
											"        \"createTime\",",
											"        \"createUser\",",
											"        \"name\",",
											"        \"path\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"parentId\": {",
											"          \"$id\": \"#/properties/data/properties/parentId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"MY_API_TEST_FOLDER\",\n\t\"parentId\": \"159cb49902c14123ba679ac78accecef\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create folder recursively",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e33d9d77-9773-42f1-a951-5feb5f588342",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"parentId\",",
											"        \"createTime\",",
											"        \"createUser\",",
											"        \"name\",",
											"        \"path\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"parentId\": {",
											"          \"$id\": \"#/properties/data/properties/parentId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"destination\": \"/Public Material/wilson/test102207/abc\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder/recursive",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder",
										"recursive"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b9adf197-592a-4022-926e-bb435f369c4a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"parentId\",",
											"        \"createTime\",",
											"        \"createUser\",",
											"        \"name\",",
											"        \"path\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"parentId\": {",
											"          \"$id\": \"#/properties/data/properties/parentId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"f82f53d636ee499a82086f90f176f3c4\",\r\n  \"name\": \"MY_API_TEST_FOLDER_2\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Delete folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1688044-195e-46fc-b3c6-17cad23f122a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"isSuccessful\",",
											"        \"rejections\"",
											"      ],",
											"      \"properties\": {",
											"        \"isSuccessful\": {",
											"          \"$id\": \"#/properties/data/properties/isSuccessful\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"rejections\": {",
											"          \"$id\": \"#/properties/data/properties/rejections\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('f82f53d636ee499a82086f90f176f3c4')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('f82f53d636ee499a82086f90f176f3c4')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change folder permission (make as public)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f52ce78-9c26-411b-9b58-1aa5e2224251",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"public\",\r\n  \"applyToSubfolders\": true\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('1da1ffe5ce68486db30d9ef9291e5cbd')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('1da1ffe5ce68486db30d9ef9291e5cbd')",
										"permission"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change folder permission (make as private)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d6895dd-e937-4ad4-895b-0911165fe191",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"private\",\r\n  \"applyToSubfolders\": true\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('f26759acb2c34d6dad5d5912f0876390')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('f26759acb2c34d6dad5d5912f0876390')",
										"permission"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change folder permission  (with condition)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17c7a8be-995f-4a5f-bb02-76a55451e1fe",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"condition\",\r\n  \"permission\": {\r\n    \"read\": [],\r\n    \"readWrite\": [\"Daaaaaaabc\"]\r\n  },\r\n  \"applyToSubfolders\": true\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('f26759acb2c34d6dad5d5912f0876390')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('f26759acb2c34d6dad5d5912f0876390')",
										"permission"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Material",
					"item": [
						{
							"name": "✔️List materials by folder Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a1eeb9c-a29a-4cfc-ba8e-a9c39267ecd3",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"result\",",
											"        \"page\",",
											"        \"size\",",
											"        \"totalCount\",",
											"        \"totalPage\",",
											"        \"elapsedSeconds\"",
											"      ],",
											"      \"properties\": {",
											"        \"result\": {",
											"          \"$id\": \"#/properties/data/properties/result\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"#/properties/data/properties/result/items\",",
											"            \"type\": \"object\",",
											"            \"required\": [",
											"              \"id\",",
											"              \"name\",",
											"              \"path\",",
											"              \"size\",",
											"              \"isArchived\",",
											"              \"type\",",
											"              \"subtype\",",
											"              \"createTime\",",
											"              \"createUser\",",
											"              \"modifyTime\",",
											"              \"modifyUser\",",
											"              \"thumbnail\"",
											"            ],",
											"            \"properties\": {",
											"              \"id\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/id\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"name\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/name\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"path\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/path\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"size\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/size\",",
											"                \"type\": \"integer\"",
											"              },",
											"              \"isArchived\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/isArchived\",",
											"                \"type\": \"boolean\"",
											"              },",
											"              \"type\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/type\",",
											"                \"type\": \"integer\"",
											"              },",
											"              \"subtype\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/subtype\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"createTime\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/createTime\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"createUser\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/createUser\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"modifyTime\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/modifyTime\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"modifyUser\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/modifyUser\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              },",
											"              \"thumbnail\": {",
											"                \"$id\": \"#/properties/data/properties/result/items/properties/thumbnail\",",
											"                \"type\": \"string\",",
											"                \"pattern\": \"^(.*)$\"",
											"              }",
											"            }",
											"          }",
											"        },",
											"        \"page\": {",
											"          \"$id\": \"#/properties/data/properties/page\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"size\": {",
											"          \"$id\": \"#/properties/data/properties/size\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"totalCount\": {",
											"          \"$id\": \"#/properties/data/properties/totalCount\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"totalPage\": {",
											"          \"$id\": \"#/properties/data/properties/totalPage\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"elapsedSeconds\": {",
											"          \"$id\": \"#/properties/data/properties/elapsedSeconds\",",
											"          \"type\": \"integer\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/folder('651d0d0eeee140d0b4d17759067749a8')/materials?size=5&page=1",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"folder('651d0d0eeee140d0b4d17759067749a8')",
										"materials"
									],
									"query": [
										{
											"key": "size",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get material by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac51b9fe-25ba-4dc4-bee4-417bb460e3ec",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('69733655253548968a6b929c737c83b4')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('69733655253548968a6b929c737c83b4')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get material by Id Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4ea7ce71-cb6e-4371-9982-e90067642798",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('{{1105}}')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('{{1105}}')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get all of defined custom fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b98fd095-04af-418d-b475-46e0cf0eb89a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/custom-fields",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"custom-fields"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create material (Basic structure)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "87e6128d-d2fb-41b0-bb52-2f346d0b1e9c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.globals.set(\"1105\", jsonData.data.id);",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"TEST ON 20200318\",\r\n\t\"folderId\": \"70d5a72098604c29a78c122906e0b7f0\",\r\n\t\"type\": \"video\",\r\n\t\"itemName\": \"ItemName\",\r\n\t\"journalist\": \"Journalist\",\r\n\t\"category\": \"Category\",\r\n\t\"programName\": \"ProgramName\",\r\n\t\"deleteProtection\": true,\r\n\t\"pendingToDelete\": true,\r\n\t\"materialId\": \"this is my materialId\",\r\n\t\"rights\": \"Rights\",\r\n\t\"comments\": \"Comments\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Add material to collection-pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "781d1bec-0a16-4794-b2a8-5188852987aa",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.globals.set(\"1105\", jsonData.data.id);",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"folderId\": \"b1aaafdff58c5e3eb86b77e996948b97\",\r\n    \"materialId\": \"89acf016197144f48e2c7072a27ab303\"\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/collection-pool/link",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"collection-pool",
										"link"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Remove material to collection-pool",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab852cde-af7d-4959-9d96-949520436f3c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.globals.set(\"1105\", jsonData.data.id);",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"materialIds\": [\"fb7be4714e2f44e1b69fa2ff63d05adb\"]\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/collection-pool/link",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"collection-pool",
										"link"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create material (With custom fields)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "974d6200-dbe2-4d59-a795-22eee0ddfd89",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"folderDeleted\",",
											"        \"rejections\"",
											"      ],",
											"      \"properties\": {",
											"        \"folderDeleted\": {",
											"          \"$id\": \"#/properties/data/properties/folderDeleted\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"rejections\": {",
											"          \"$id\": \"#/properties/data/properties/rejections\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"MyFirstAPIGWUploadTest\",\r\n\t\"folderId\": \"6db996357a5741269bc25c76402f10f0\",\r\n\t\"type\": \"video\",\r\n\t\"customMetadata\": {\r\n\t\t\"Format_ENUM\": \"1\"\r\n\t}\r\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create material (With general metadata)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f38d0d0-7e62-427b-87d2-7047d3f978cc",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"MyFirstAPIGWUploadTest\",\r\n\t\"folderId\": \"dda869acfb804e6a87b9155dcccff321\",\r\n\t\"type\": \"video\",\r\n\t\"metadata\": {\r\n\t\t\"acquisition\": {\r\n\t\t\t\"exposureMode\": \"ExposureMode\",\r\n\t\t\t\"exposureIndex\": \"ExposureIndex\",\r\n\t\t\t\"focusMode\": \"FocusMode\",\r\n\t\t\t\"focusPosition\": \"FocusPosition\",\r\n\t\t\t\"shutterSpeed\": \"ShutterSpeed\",\r\n\t\t\t\"masterGain\": \"MasterGain\",\r\n\t\t\t\"iso\": \"ISO\",\r\n\t\t\t\"whiteBalance\": \"WhiteBalance\",\r\n\t\t\t\"masterBlack\": \"MasterBlack\",\r\n\t\t\t\"gamma\": \"Gamma\",\r\n\t\t\t\"irisFNumber\": \"IrisFNumber\",\r\n\t\t\t\"gps\": \"GPS\",\r\n\t\t\t\"rawData\": \"<?xml version=\\\"1.0\\\"?><NonRealTimeMeta></NonRealTimeMeta>\",\r\n\t\t\t\"deviceManufacturer\": \"DeviceManufacturer\",\r\n\t\t\t\"deviceSerialNumber\": \"DeviceSerialNumber\",\r\n\t\t\t\"deviceModel\": \"DeviceModel\"\r\n\t\t},\r\n\t\t\"planning\": {\r\n\t\t\t\"contactInfo\": \"ContactInfo\",\r\n\t\t\t\"director\": \"Director\",\r\n\t\t\t\"equipment\": \"Equipment\",\r\n\t\t\t\"inputBy\": \"admin\",\r\n\t\t\t\"inputSource\": \"HD\",\r\n\t\t\t\"others\": \"Others\",\r\n\t\t\t\"photographer\": \"Photographer\",\r\n\t\t\t\"place\": \"Place\",\r\n\t\t\t\"planningDate\": \"2019-7-14 10:00:00\",\r\n\t\t\t\"reporter\": \"Reporter\"\r\n\t\t},\r\n\t\t\"filling\": {\r\n\t\t    \"inputSource\": \"HD SDI\",\r\n\t\t    \"channelName\": \"QA1\",\r\n\t\t    \"deviceID\": \"HD1080p29.97\",\r\n\t\t    \"audioChannelQuantity\": 12,\r\n\t\t    \"streamChannel\": 192,\r\n\t\t    \"sourceTapeBarcode\": \"Source Tape Barcode\",\r\n\t\t    \"sourceTapeTitle\": \"Source Tape Title\",\r\n\t\t    \"backupTapeTitle\": \"Backup Tape Title\"\r\n\t\t},\r\n\t\t\"original\": {\r\n\t\t\t\"audioFormat\": \"AudioFormat\",\r\n\t\t\t\"basicUMID\": \"BasicUMID\",\r\n\t\t\t\"clipTitle\": \"ClipTitle\",\r\n\t\t\t\"comments\": \"Comments\",\r\n\t\t\t\"createdBy\": \"CreatedBy\",\r\n\t\t\t\"description\": \"Description\",\r\n\t\t\t\"duration\": 1000,\r\n\t\t\t\"mainTitle\": \"MainTitle\",\r\n\t\t\t\"recordingDate\": \"2019-7-14 10:00:00\",\r\n\t\t\t\"stc\": 1000,\r\n\t\t\t\"umid\": \"UMID\",\r\n\t\t\t\"userMediaId\": \"UserMediaId\",\r\n\t\t\t\"videoFormat\": \"VideoFormat\",\r\n\t\t\t\"fieldSequence\": \"OriginalWay\"\r\n\t\t},\r\n\t\t\"audioTrackInfo\": [\r\n\t\t\t{\r\n\t\t\t\t\"track\": 1,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo L\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"track\": 2,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo R\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create material (Full)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16c89dcf-88b2-46d1-a7a6-c1d1e294d309",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"name\": \"wilson1010-04\",\r\n\t\"folderId\": \"c4136a2ad3774a6e3abe3da7f8529221\",\r\n\t\"type\": \"video\",\r\n\t\"itemName\": \"ItemName\",\r\n\t\"journalist\": \"Journalist\",\r\n\t\"category\": \"Category\",\r\n\t\"programName\": \"ProgramName\",\r\n\t\"deleteProtection\": true,\r\n\t\"pendingToDelete\": true,\r\n\t\"materialId\": \"this is my materialId\",\r\n\t\"rights\": \"Rights\",\r\n\t\"comments\": \"Comments\",\r\n\t\"customMetadata\": {\r\n        \"mydate_DATETIME\": \"2019-8-2 01:06:59\"\r\n    },\r\n\t\"metadata\": {\r\n\t\t\"acquisition\": {\r\n\t\t\t\"exposureMode\": \"ExposureMode\",\r\n\t\t\t\"exposureIndex\": \"ExposureIndex\",\r\n\t\t\t\"focusMode\": \"FocusMode\",\r\n\t\t\t\"focusPosition\": \"FocusPosition\",\r\n\t\t\t\"shutterSpeed\": \"ShutterSpeed\",\r\n\t\t\t\"masterGain\": \"MasterGain\",\r\n\t\t\t\"iso\": \"ISO\",\r\n\t\t\t\"whiteBalance\": \"WhiteBalance\",\r\n\t\t\t\"masterBlack\": \"MasterBlack\",\r\n\t\t\t\"gamma\": \"Gamma\",\r\n\t\t\t\"irisFNumber\": \"IrisFNumber\",\r\n\t\t\t\"gps\": \"GPS\",\r\n\t\t\t\"rawData\": \"<?xml version=\\\"1.0\\\"?><NonRealTimeMeta xmlns=\\\"urn:schemas-professionalDisc:nonRealTimeMeta\\\" xmlns:lib=\\\"urn:schemas-professionalDisc:lib\\\" xmlns:sony=\\\"urn:schemas-sony-com:pro:nrtExtention:2003\\\" lastUpdate=\\\"2019-08-02T17:06:17+08:00\\\"><TargetMaterial umidRef=\\\"060A2B340101010501010D431300000087515F799EA84870B8490811A7D7EBCE\\\"/><Duration value=\\\"9002\\\"/><LtcChangeTable tcFps=\\\"50\\\"><LtcChange frameCount=\\\"294\\\" value=\\\"44050000\\\" status=\\\"increment\\\"/><LtcChange frameCount=\\\"9295\\\" value=\\\"45050300\\\" status=\\\"end\\\"/></LtcChangeTable><CreationDate value=\\\"2019-08-02T17:06:17+08:00\\\"/><LastUpdate value=\\\"2019-08-02T17:06:17+08:00\\\"/><VideoFormat><VideoFrame videoCodec=\\\"MPEG2HD35_1280_720_MP@HL\\\" formatFps=\\\"50p\\\"/><VideoLayout pixel=\\\"1280\\\" numOfVerticalLine=\\\"720\\\" aspectRatio=\\\"16:9\\\"/></VideoFormat><AudioFormat numOfChannel=\\\"2\\\"><AudioRecPort port=\\\"OTHERS\\\" audioCodec=\\\"LPCM16\\\" trackDst=\\\"CH1\\\"/><AudioRecPort port=\\\"OTHERS\\\" audioCodec=\\\"LPCM16\\\" trackDst=\\\"CH2\\\"/></AudioFormat><Creator name=\\\"NLE\\\"/></NonRealTimeMeta>\",\r\n\t\t\t\"deviceManufacturer\": \"DeviceManufacturer\",\r\n\t\t\t\"deviceSerialNumber\": \"DeviceSerialNumber\",\r\n\t\t\t\"deviceModel\": \"DeviceModel\"\r\n\t\t},\r\n\t\t\"planning\": {\r\n\t\t\t\"name\": \"planningName\",\r\n\t\t\t\"contactInfo\": \"ContactInfo\",\r\n\t\t\t\"director\": \"Director\",\r\n\t\t\t\"equipment\": \"Equipment\",\r\n\t\t\t\"inputBy\": \"admin\",\r\n\t\t\t\"inputSource\": \"HD\",\r\n\t\t\t\"others\": \"Others\",\r\n\t\t\t\"photographer\": \"Photographer\",\r\n\t\t\t\"place\": \"Place\",\r\n\t\t\t\"planningDate\": \"2020-10-09T00:00:00.000Z\",\r\n\t\t\t\"reporter\": \"Reporter\"\r\n\t\t},\r\n\t\t\"filling\": {\r\n\t\t    \"inputSource\": \"HD SDI\",\r\n\t\t    \"channelName\": \"QA1\",\r\n\t\t    \"deviceID\": \"HD1080p29.97\",\r\n\t\t    \"audioChannelQuantity\": 12,\r\n\t\t    \"streamChannel\": 192,\r\n\t\t    \"sourceTapeBarcode\": \"Source Tape Barcode\",\r\n\t\t    \"sourceTapeTitle\": \"Source Tape Title\",\r\n\t\t    \"backupTapeTitle\": \"Backup Tape Title\"\r\n\t\t},\r\n\t\t\"original\": {\r\n\t\t\t\"audioFormat\": \"AudioFormat\",\r\n\t\t\t\"basicUMID\": \"BasicUMID\",\r\n\t\t\t\"clipTitle\": \"ClipTitle\",\r\n\t\t\t\"comments\": \"Comments\",\r\n\t\t\t\"createdBy\": \"CreatedBy\",\r\n\t\t\t\"description\": \"Description\",\r\n\t\t\t\"duration\": 1000,\r\n\t\t\t\"mainTitle\": \"MainTitle\",\r\n\t\t\t\"recordingDate\": \"2020-10-09 00:00:00\",\r\n\t\t\t\"stc\": 1000,\r\n\t\t\t\"umid\": \"UMID\",\r\n\t\t\t\"userMediaId\": \"UserMediaId\",\r\n\t\t\t\"videoFormat\": \"VideoFormat\",\r\n\t\t\t\"fieldSequence\": \"OriginalWay\"\r\n\t\t},\r\n\t\t\"audioTrackInfo\": [\r\n\t\t\t{\r\n\t\t\t\t\"track\": 1,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo L\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"track\": 2,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo R\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify material (Individual update)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b14c279-0f0b-4506-a5e5-587ab734a036",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"folderId\": {",
											"          \"$id\": \"#/properties/data/properties/folderId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"itemName\": {",
											"          \"$id\": \"#/properties/data/properties/itemName\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"journalist\": {",
											"          \"$id\": \"#/properties/data/properties/journalist\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"category\": {",
											"          \"$id\": \"#/properties/data/properties/category\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"programName\": {",
											"          \"$id\": \"#/properties/data/properties/programName\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"rights\": {",
											"          \"$id\": \"#/properties/data/properties/rights\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"comments\": {",
											"          \"$id\": \"#/properties/data/properties/comments\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyTime\": {",
											"          \"$id\": \"#/properties/data/properties/modifyTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyUser\": {",
											"          \"$id\": \"#/properties/data/properties/modifyUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyHost\": {",
											"          \"$id\": \"#/properties/data/properties/modifyHost\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"acquisition\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/acquisition\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"exposureMode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/exposureMode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"exposureIndex\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/exposureIndex\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"focusMode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/focusMode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"focusPosition\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/focusPosition\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"shutterSpeed\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/shutterSpeed\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"masterGain\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/masterGain\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"iso\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/iso\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"whiteBalance\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/whiteBalance\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"masterBlack\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/masterBlack\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"gamma\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/gamma\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"irisFNumber\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/irisFNumber\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"gps\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/gps\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"rawData\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/rawData\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceManufacturer\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceManufacturer\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceModel\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceModel\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceSerialNumber\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceSerialNumber\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"planning\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/planning\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"id\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/id\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"place\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/place\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"planningDate\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/planningDate\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"director\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/director\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"inputBy\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/inputBy\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"photographer\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/photographer\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"reporter\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/reporter\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"others\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/others\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"equipment\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/equipment\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"contactInfo\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/contactInfo\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"inputSource\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/inputSource\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"filling\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/filling\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"inputSource\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/inputSource\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"channelName\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/channelName\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceId\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/deviceId\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"audioChannelQuantity\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/audioChannelQuantity\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"streamChannel\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/streamChannel\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"sourceTapeBarcode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/sourceTapeBarcode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"sourceTapeTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/sourceTapeTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"backupTapeTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/backupTapeTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"original\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/original\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"fieldSequence\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/fieldSequence\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"userMediaId\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/userMediaId\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"mainTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/mainTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"comments\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/comments\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"clipTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/clipTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"createdBy\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/createdBy\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"recordingDate\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/recordingDate\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"duration\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/duration\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"stc\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/stc\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"videoFormat\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/videoFormat\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"audioFormat\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/audioFormat\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"umid\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/umid\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"basicUMID\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/basicUMID\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"audioTrackInfo\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/audioTrackInfo\",",
											"              \"type\": \"array\"",
											"            }",
											"          }",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"69733655253548968a6b929c737c83b4\",\n\t\"folderId\":\"7243b2117b3f1ebbe1662d9daeb863e1\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify material (Full)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b324091-f768-4b7e-bb03-64f0187b1076",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"name\": {",
											"          \"$id\": \"#/properties/data/properties/name\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"folderId\": {",
											"          \"$id\": \"#/properties/data/properties/folderId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"path\": {",
											"          \"$id\": \"#/properties/data/properties/path\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"itemName\": {",
											"          \"$id\": \"#/properties/data/properties/itemName\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"journalist\": {",
											"          \"$id\": \"#/properties/data/properties/journalist\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"category\": {",
											"          \"$id\": \"#/properties/data/properties/category\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"programName\": {",
											"          \"$id\": \"#/properties/data/properties/programName\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"isArchived\": {",
											"          \"$id\": \"#/properties/data/properties/isArchived\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"isArchivedTo3rd\": {",
											"          \"$id\": \"#/properties/data/properties/isArchivedTo3rd\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"deleteProtection\": {",
											"          \"$id\": \"#/properties/data/properties/deleteProtection\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"materialId\": {",
											"          \"$id\": \"#/properties/data/properties/materialId\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"rights\": {",
											"          \"$id\": \"#/properties/data/properties/rights\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"comments\": {",
											"          \"$id\": \"#/properties/data/properties/comments\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"frameRate\": {",
											"          \"$id\": \"#/properties/data/properties/frameRate\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"subtype\": {",
											"          \"$id\": \"#/properties/data/properties/subtype\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"pendingToDelete\": {",
											"          \"$id\": \"#/properties/data/properties/pendingToDelete\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"imageType\": {",
											"          \"$id\": \"#/properties/data/properties/imageType\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"createUser\": {",
											"          \"$id\": \"#/properties/data/properties/createUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyTime\": {",
											"          \"$id\": \"#/properties/data/properties/modifyTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyUser\": {",
											"          \"$id\": \"#/properties/data/properties/modifyUser\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"modifyHost\": {",
											"          \"$id\": \"#/properties/data/properties/modifyHost\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"genealogy\": {",
											"          \"$id\": \"#/properties/data/properties/genealogy\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"acquisition\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/acquisition\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"exposureMode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/exposureMode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"exposureIndex\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/exposureIndex\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"focusMode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/focusMode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"focusPosition\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/focusPosition\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"shutterSpeed\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/shutterSpeed\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"masterGain\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/masterGain\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"iso\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/iso\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"whiteBalance\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/whiteBalance\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"masterBlack\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/masterBlack\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"gamma\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/gamma\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"irisFNumber\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/irisFNumber\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"gps\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/gps\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"rawData\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/rawData\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceManufacturer\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceManufacturer\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceModel\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceModel\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceSerialNumber\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/acquisition/properties/deviceSerialNumber\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"planning\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/planning\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"id\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/id\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"place\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/place\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"planningDate\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/planningDate\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"director\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/director\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"inputBy\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/inputBy\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"photographer\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/photographer\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"reporter\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/reporter\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"others\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/others\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"equipment\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/equipment\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"contactInfo\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/contactInfo\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"inputSource\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/planning/properties/inputSource\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"filling\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/filling\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"inputSource\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/inputSource\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"channelName\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/channelName\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"deviceId\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/deviceId\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"audioChannelQuantity\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/audioChannelQuantity\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"streamChannel\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/streamChannel\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"sourceTapeBarcode\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/sourceTapeBarcode\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"sourceTapeTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/sourceTapeTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"backupTapeTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/filling/properties/backupTapeTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"original\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/original\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"fieldSequence\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/fieldSequence\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"userMediaId\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/userMediaId\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"mainTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/mainTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"comments\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/comments\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"clipTitle\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/clipTitle\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"createdBy\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/createdBy\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"recordingDate\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/recordingDate\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"duration\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/duration\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"stc\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/stc\",",
											"                  \"type\": \"integer\"",
											"                },",
											"                \"videoFormat\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/videoFormat\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"audioFormat\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/audioFormat\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"umid\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/umid\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                },",
											"                \"basicUMID\": {",
											"                  \"$id\": \"#/properties/data/properties/metadata/properties/original/properties/basicUMID\",",
											"                  \"type\": \"string\",",
											"                  \"pattern\": \"^(.*)$\"",
											"                }",
											"              }",
											"            },",
											"            \"audioTrackInfo\": {",
											"              \"$id\": \"#/properties/data/properties/metadata/properties/audioTrackInfo\",",
											"              \"type\": \"array\"",
											"            }",
											"          }",
											"        },",
											"        \"customMetadata\": {",
											"          \"$id\": \"#/properties/data/properties/customMetadata\",",
											"          \"type\": \"object\"",
											"        },",
											"        \"fileGroups\": {",
											"          \"$id\": \"#/properties/data/properties/fileGroups\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"id\": \"51e4828e0c8345c78db1456da767d2ef\",\r\n\t\"name\": \"MyFirstAPIGWUploadTest\",\r\n\t\"itemName\": \"ItemName\",\r\n\t\"journalist\": \"Journalist\",\r\n\t\"category\": \"Category\",\r\n\t\"programName\": \"ProgramName\",\r\n\t\"deleteProtection\": true,\r\n\t\"pendingToDelete\": true,\r\n\t\"materialId\": \"this is my materialId\",\r\n\t\"rights\": \"Rights\",\r\n\t\"comments\": \"Comments\",\r\n\t\"modifyUser\": \"766d3c0b1ba94d0abed5851440ff3056\",\r\n\t\"modifyHost\": \"172.168.0.222\",\r\n\t\"customMetadata\": {\r\n        \"mydate_DATETIME\": \"2019-8-2 01:06:59\"\r\n    },\r\n\t\"metadata\": {\r\n\t\t\"acquisition\": {\r\n\t\t\t\"exposureMode\": \"ExposureMode\",\r\n\t\t\t\"exposureIndex\": \"ExposureIndex\",\r\n\t\t\t\"focusMode\": \"FocusMode\",\r\n\t\t\t\"focusPosition\": \"FocusPosition\",\r\n\t\t\t\"shutterSpeed\": \"ShutterSpeed\",\r\n\t\t\t\"masterGain\": \"MasterGain\",\r\n\t\t\t\"iso\": \"ISO\",\r\n\t\t\t\"whiteBalance\": \"WhiteBalance\",\r\n\t\t\t\"masterBlack\": \"MasterBlack\",\r\n\t\t\t\"gamma\": \"Gamma\",\r\n\t\t\t\"irisFNumber\": \"IrisFNumber\",\r\n\t\t\t\"gps\": \"GPS\",\r\n\t\t\t\"rawData\": \"<?xml version=\\\"1.0\\\"?><NonRealTimeMeta xmlns=\\\"urn:schemas-professionalDisc:nonRealTimeMeta\\\" xmlns:lib=\\\"urn:schemas-professionalDisc:lib\\\" xmlns:sony=\\\"urn:schemas-sony-com:pro:nrtExtention:2003\\\" lastUpdate=\\\"2019-08-02T17:06:17+08:00\\\"><TargetMaterial umidRef=\\\"060A2B340101010501010D431300000087515F799EA84870B8490811A7D7EBCE\\\"/><Duration value=\\\"9002\\\"/><LtcChangeTable tcFps=\\\"50\\\"><LtcChange frameCount=\\\"294\\\" value=\\\"44050000\\\" status=\\\"increment\\\"/><LtcChange frameCount=\\\"9295\\\" value=\\\"45050300\\\" status=\\\"end\\\"/></LtcChangeTable><CreationDate value=\\\"2019-08-02T17:06:17+08:00\\\"/><LastUpdate value=\\\"2019-08-02T17:06:17+08:00\\\"/><VideoFormat><VideoFrame videoCodec=\\\"MPEG2HD35_1280_720_MP@HL\\\" formatFps=\\\"50p\\\"/><VideoLayout pixel=\\\"1280\\\" numOfVerticalLine=\\\"720\\\" aspectRatio=\\\"16:9\\\"/></VideoFormat><AudioFormat numOfChannel=\\\"2\\\"><AudioRecPort port=\\\"OTHERS\\\" audioCodec=\\\"LPCM16\\\" trackDst=\\\"CH1\\\"/><AudioRecPort port=\\\"OTHERS\\\" audioCodec=\\\"LPCM16\\\" trackDst=\\\"CH2\\\"/></AudioFormat><Creator name=\\\"NLE\\\"/></NonRealTimeMeta>\",\r\n\t\t\t\"deviceManufacturer\": \"DeviceManufacturer\",\r\n\t\t\t\"deviceSerialNumber\": \"DeviceSerialNumber\",\r\n\t\t\t\"deviceModel\": \"DeviceModel\"\r\n\t\t},\r\n\t\t\"planning\": {\r\n\t\t\t\"contactInfo\": \"ContactInfo\",\r\n\t\t\t\"director\": \"Director\",\r\n\t\t\t\"equipment\": \"Equipment\",\r\n\t\t\t\"inputBy\": \"InputBy\",\r\n\t\t\t\"inputSource\": \"InputSource\",\r\n\t\t\t\"others\": \"Others\",\r\n\t\t\t\"photographer\": \"Photographer\",\r\n\t\t\t\"place\": \"Place\",\r\n\t\t\t\"planningDate\": \"2020-10-14T00:00:01.000z\",\r\n\t\t\t\"reporter\": \"Reporter\"\r\n\t\t},\r\n\t\t\"filling\": {\r\n\t\t    \"inputSource\": \"HD SDI\",\r\n\t\t    \"channelName\": \"QA1\",\r\n\t\t    \"deviceID\": \"HD1080p29.97\",\r\n\t\t    \"audioChannelQuantity\": 12,\r\n\t\t    \"streamChannel\": 192,\r\n\t\t    \"sourceTapeBarcode\": \"Source Tape Barcode\",\r\n\t\t    \"sourceTapeTitle\": \"Source Tape Title\",\r\n\t\t    \"backupTapeTitle\": \"Backup Tape Title\"\r\n\t\t},\r\n\t\t\"original\": {\r\n\t\t\t\"audioFormat\": \"AudioFormat\",\r\n\t\t\t\"basicUMID\": \"BasicUMID\",\r\n\t\t\t\"clipTitle\": \"ClipTitle\",\r\n\t\t\t\"comments\": \"Comments\",\r\n\t\t\t\"createdBy\": \"CreatedBy\",\r\n\t\t\t\"description\": \"Description\",\r\n\t\t\t\"duration\": 1000,\r\n\t\t\t\"mainTitle\": \"MainTitle\",\r\n\t\t\t\"recordingDate\": \"2020-10-14T00:00:01.000z\",\r\n\t\t\t\"stc\": 1000,\r\n\t\t\t\"umid\": \"UMID\",\r\n\t\t\t\"userMediaId\": \"UserMediaId\",\r\n\t\t\t\"videoFormat\": \"VideoFormat\",\r\n\t\t\t\"fieldSequence\": \"OriginalWay\"\r\n\t\t},\r\n\t\t\"audioTrackInfo\": [\r\n\t\t\t{\r\n\t\t\t\t\"track\": 1,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo L\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"track\": 2,\r\n\t\t\t\t\"language\": \"English\",\r\n\t\t\t\t\"type\": \"Main Language Stereo R\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Delete material",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97baf37a-afb8-4ec3-b87b-c4fb59d273d3",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isSuccessful\": {",
											"          \"$id\": \"#/properties/data/properties/isSuccessful\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"rejections\": {",
											"          \"$id\": \"#/properties/data/properties/rejections\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('1fd5a01e95cf499684f6c29a9d931e2c')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('1fd5a01e95cf499684f6c29a9d931e2c')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Delete file group from material (corresponding physical files also will be deleted)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7765761-b638-4543-852a-cea5fcd56cfb",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"isSuccessful\": {",
											"          \"$id\": \"#/properties/data/properties/isSuccessful\",",
											"          \"type\": \"boolean\"",
											"        },",
											"        \"rejections\": {",
											"          \"$id\": \"#/properties/data/properties/rejections\",",
											"          \"type\": \"array\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('e43117dc0b134432825918f4481dca36')/file-group('video')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('e43117dc0b134432825918f4481dca36')",
										"file-group('video')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get media standard by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d6d4dcd-ed33-41b0-a74f-263ea90cf845",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/media-standard('263')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"media-standard('263')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Lock material",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "85c1812b-ad15-43cd-88d4-1cc8d1523f0a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('0cda9bf03f884a7e8fbc125c6bdd743e')/lock?clientIp=172.16.139.22",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('0cda9bf03f884a7e8fbc125c6bdd743e')",
										"lock"
									],
									"query": [
										{
											"key": "clientIp",
											"value": "172.16.139.22"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Unlock material",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6be78f9-2d02-4ae4-9d47-27925084a1b9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('0cda9bf03f884a7e8fbc125c6bdd743e')/unlock",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('0cda9bf03f884a7e8fbc125c6bdd743e')",
										"unlock"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change material permission (make as public)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79c9bfa7-08e8-438a-908e-8413bb448d5b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"public\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('f7a7f3bd36c24de597ea8e870dfd4a7b')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('f7a7f3bd36c24de597ea8e870dfd4a7b')",
										"permission"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change material permission (make as private)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf4d6381-327f-40f5-aa24-4bf6778829b6",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"private\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('f7a7f3bd36c24de597ea8e870dfd4a7b')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('f7a7f3bd36c24de597ea8e870dfd4a7b')",
										"permission"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Change material permission (with condition)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b8325cf-aad8-4a86-9a14-ab575d6728d5",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"condition\",\r\n  \"permission\": {\r\n    \"read\": [],\r\n    \"readWrite\": [\"Daaaaaaabc\"]\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('f7a7f3bd36c24de597ea8e870dfd4a7b')/permission",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('f7a7f3bd36c24de597ea8e870dfd4a7b')",
										"permission"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3906da20-96be-4442-a600-f848cca6c887",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7c393470-8e4b-4810-8e4a-51607e58cb0c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Marker",
					"item": [
						{
							"name": "✔️Get markers by material ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "85df0bf1-77c8-4c0f-9790-04db4ff6a808",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"array\",",
											"      \"items\": {",
											"        \"$id\": \"#/properties/data/items\",",
											"        \"type\": \"object\",",
											"        \"required\": [",
											"          \"id\",",
											"          \"position\",",
											"          \"in\",",
											"          \"out\",",
											"          \"createTime\",",
											"          \"type\",",
											"          \"color\",",
											"          \"note\"",
											"        ],",
											"        \"properties\": {",
											"          \"id\": {",
											"            \"$id\": \"#/properties/data/items/properties/id\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"position\": {",
											"            \"$id\": \"#/properties/data/items/properties/position\",",
											"            \"type\": \"integer\"",
											"          },",
											"          \"in\": {",
											"            \"$id\": \"#/properties/data/items/properties/in\",",
											"            \"type\": \"integer\"",
											"          },",
											"          \"out\": {",
											"            \"$id\": \"#/properties/data/items/properties/out\",",
											"            \"type\": \"integer\"",
											"          },",
											"          \"createTime\": {",
											"            \"$id\": \"#/properties/data/items/properties/createTime\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"type\": {",
											"            \"$id\": \"#/properties/data/items/properties/type\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"color\": {",
											"            \"$id\": \"#/properties/data/items/properties/color\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          },",
											"          \"note\": {",
											"            \"$id\": \"#/properties/data/items/properties/note\",",
											"            \"type\": \"string\",",
											"            \"pattern\": \"^(.*)$\"",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/markers",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"markers"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Get marker by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6b605e5-71d5-4569-9bfb-b38ac74ea5a8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"position\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"position\": {",
											"          \"$id\": \"#/properties/data/properties/position\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker('b2501c7ae48443cf8e17d08ae90124b0')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker('b2501c7ae48443cf8e17d08ae90124b0')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create marker (EssenceMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b34fe8c-3294-4019-9e8f-361e29c39336",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"keyframe\": 1,\n\t\"type\": \"EssenceMarker\",\n\t\"color\": \"#f1f1f1\",\n\t\"note\": \"Note for EssenceMarker\"\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify marker (EssenceMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bf3439e8-df2b-4b5e-ba7c-fde36d655ee0",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"fb64321de5b94804b105c3f6deb12014\",\r\n    \"keyframe\": 3,\r\n    \"color\": \"#f1f1f1\",\r\n    \"note\": \"Note for EssenceMarker\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create marker (ChangeMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e84cf97-8ad0-4146-a6b6-84323ab93fa9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"position\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"position\": {",
											"          \"$id\": \"#/properties/data/properties/position\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"keyframe\": 0,\n\t\"type\": \"ChangeMarker\",\n\t\"color\": \"#f1f1f1\",\n\t\"note\": \"Note for ChangeMarker\",\n\t\"in\": 25,\n\t\"out\": 25\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify marker (ChangeMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8eaec1de-d345-4f6e-ba05-83afcf5ed300",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"position\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"position\": {",
											"          \"$id\": \"#/properties/data/properties/position\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"b2501c7ae48443cf8e17d08ae90124b0\",\r\n    \"keyframe\": 5,\r\n    \"in\": 25,\r\n    \"out\": 25,\r\n    \"color\": \"#9F000B\",\r\n    \"note\": \"Modified ChangeMarker\"\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create marker (SceneMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c326c450-1df4-448c-a455-f2e412a1ccc2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"keyframe\": 10,\n\t\"type\": \"SceneMarker\",\n\t\"color\": \"#f1f1f1\",\n\t\"note\": \"Note for SceneMarker\",\n\t\"in\": 10,\n\t\"out\": 16,\n\t\"metadata\": {\n\t\t\"affiliation\": \"Affiliation\",\n\t\t\"catchword\": \"Catchword\",\n\t\t\"country\": \"Country\",\n\t\t\"originalTone\": \"OriginalTone\",\n\t\t\"person\": \"Catchword\",\n\t\t\"place\": \"place\",\n\t\t\"recordingDate\": \"2019-8-5T23:34:06.000z\",\n\t\t\"rights\": \"Rights\",\n\t\t\"sceneType\": \"SceneType\"\n\t}\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('34e58279cb074a2bb41fd4b4e751ed0c')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('34e58279cb074a2bb41fd4b4e751ed0c')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify marker (SceneMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca076b1b-fa73-41be-84be-45cba7681a8e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"thumbnail\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"thumbnail\": {",
											"          \"$id\": \"#/properties/data/properties/thumbnail\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"6a3eef77828e4025af3e189738d480d8\",\r\n    \"keyframe\": 5,\r\n    \"in\": 25,\r\n    \"out\": 25,\r\n    \"color\": \"#F1F1F1\",\r\n    \"note\": \"Note for SceneMarker\",\r\n    \"metadata\": {\r\n        \"recordingDate\": \"2019-08-04 23:34:06\",\r\n        \"originalTone\": \"OriginalTone\",\r\n        \"sceneType\": \"SceneType\",\r\n        \"person\": \"Catchword\",\r\n        \"affiliation\": \"Affiliation\",\r\n        \"country\": \"Country\",\r\n        \"place\": \"place\",\r\n        \"catchword\": \"Catchword\",\r\n        \"rights\": \"Rights\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('34e58279cb074a2bb41fd4b4e751ed0c')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('34e58279cb074a2bb41fd4b4e751ed0c')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create marker (Contribution)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7052a34a-27f9-4410-9ed8-f5ef91adaba5",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"keyframe\": 11,\n\t\"type\": \"Contribution\",\n\t\"color\": \"#f1f1f1\",\n\t\"note\": \"Note for Contribution\",\n\t\"in\": 10,\n\t\"out\": 16,\n\t\"metadata\": {\n\t\t\"subtitle\": \"Subtitle\",\n\t\t\"description\": \"Description\",\n\t\t\"remark\": \"Remark\",\n\t\t\"country\": \"Country\",\n\t\t\"place\": \"place\",\n\t\t\"author\": \"Author\",\n\t\t\"organization\": \"Organization\",\n\t\t\"catchword\": \"Catchword\",\n\t\t\"rights\": \"Rights\",\n\t\t\"rightHolder\": \"RightHolder\",\n\t\t\"materialType\": \"MaterialType\",\n\t\t\"object\": \"Object\",\n\t\t\"recordingDate\": \"2020-09-24T09:31:06.000Z\",\n\t\t\"broadcastDate\": \"2020-09-24 23:34:06\",\n\t\t\"programTitle\": \"ProgramTitle\",\n\t\t\"programSubtitle\": \"ProgramSubtitle\",\n\t\t\"version\": 10\n\t}\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('34e58279cb074a2bb41fd4b4e751ed0c')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('34e58279cb074a2bb41fd4b4e751ed0c')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify marker (Contribution)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "587112a8-703a-402f-b112-9a36c519bae9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"thumbnail\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"thumbnail\": {",
											"          \"$id\": \"#/properties/data/properties/thumbnail\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"d57456681e0e4ae8af9e2d6f2ef37146\",\r\n    \"keyframe\": 1,\r\n    \"in\": 25,\r\n    \"out\": 26,\r\n    \"color\": \"#F1F1F1\",\r\n    \"note\": \"Note for Contribution\",\r\n    \"metadata\": {\r\n        \"version\": 11,\r\n        \"recordingDate\": \"2020-09-24T10:31:06.000z\",\r\n        \"broadcastDate\": \"2020-09-25 00:34:06\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('34e58279cb074a2bb41fd4b4e751ed0c')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('34e58279cb074a2bb41fd4b4e751ed0c')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Create marker (LoggingMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41b8ddbd-a52e-467f-8df1-3dc07dc28cd4",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"keyframe\": 11,\n\t\"type\": \"LoggingMarker\",\n\t\"color\": \"#f1f1f1\",\n\t\"note\": \"Note for LoggingMarker\",\n\t\"in\": 5,\n\t\"out\": 15,\n\t\"metadata\": {\n\t\t\"title\": [\n            {\n                \"value\": \"Title\",\n                \"language\": 0\n            },\n            {\n                \"value\": \"Título\",\n                \"language\": 1\n            },\n            {\n                \"value\": \"Titre\",\n                \"language\": 2\n            },\n            {\n                \"value\": \"Titel\",\n                \"language\": 3\n            },\n            {\n                \"value\": \"Titolo\",\n                \"language\": 4\n            },\n            {\n                \"value\": \"標題\",\n                \"language\": 5\n            },\n            {\n                \"value\": \"标题\",\n                \"language\": 6\n            },\n            {\n                \"value\": \"표제\",\n                \"language\": 7\n            }\n        ],\n        \"people\": [\n            {\n                \"value\": \"People\",\n                \"language\": 0\n            },\n            {\n                \"value\": \"Gente\",\n                \"language\": 1\n            },\n            {\n                \"value\": \"Personnes\",\n                \"language\": 2\n            },\n            {\n                \"value\": \"Menschen\",\n                \"language\": 3\n            },\n            {\n                \"value\": \"Persone\",\n                \"language\": 4\n            },\n            {\n                \"value\": \"部員\",\n                \"language\": 5\n            },\n            {\n                \"value\": \"成员\",\n                \"language\": 6\n            },\n            {\n                \"value\": \"사람들\",\n                \"language\": 7\n            }\n        ],\n        \"action\": [\n            {\n                \"value\": \"Goal\",\n                \"language\": 0\n            },\n            {\n                \"value\": \"Gol\",\n                \"language\": 1\n            },\n            {\n                \"value\": \"Objectif\",\n                \"language\": 2\n            },\n            {\n                \"value\": \"Tor\",\n                \"language\": 3\n            },\n            {\n                \"value\": \"Obbiettivo\",\n                \"language\": 4\n            },\n            {\n                \"value\": \"進球\",\n                \"language\": 5\n            },\n            {\n                \"value\": \"进球\",\n                \"language\": 6\n            },\n            {\n                \"value\": \"진행\",\n                \"language\": 7\n            }\n        ]\n\t}\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Modify marker (LoggingMarker)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a81185c-2aad-45c5-bcdf-ee151948e59c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"keyframe\",",
											"        \"in\",",
											"        \"out\",",
											"        \"createTime\",",
											"        \"type\",",
											"        \"color\",",
											"        \"note\",",
											"        \"metadata\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"keyframe\": {",
											"          \"$id\": \"#/properties/data/properties/keyframe\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"in\": {",
											"          \"$id\": \"#/properties/data/properties/in\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"out\": {",
											"          \"$id\": \"#/properties/data/properties/out\",",
											"          \"type\": \"integer\"",
											"        },",
											"        \"createTime\": {",
											"          \"$id\": \"#/properties/data/properties/createTime\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"color\": {",
											"          \"$id\": \"#/properties/data/properties/color\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"note\": {",
											"          \"$id\": \"#/properties/data/properties/note\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"metadata\": {",
											"          \"$id\": \"#/properties/data/properties/metadata\",",
											"          \"type\": \"object\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"27ad315567204bfc97633f34e2b8d7af\",\r\n    \"keyframe\": 5,\r\n    \"in\": 0,\r\n    \"out\": 11,\r\n    \"color\": \"#F1F1F1\",\r\n    \"note\": \"Note for LoggingMarker\",\r\n    \"metadata\": {\r\n\t\t\"title\": [\r\n\t\t\t{\r\n\t\t\t\t\"value\": \"Title\",\r\n\t\t\t\t\"language\": 0\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"people\": [\r\n\t\t\t{\r\n\t\t\t\t\"value\": \"People\",\r\n\t\t\t\t\"language\": 0\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"action\": [\r\n\t\t\t{\r\n\t\t\t\t\"value\": \"Goal\",\r\n\t\t\t\t\"language\": 0\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('6c7c4432a3ea47dfa787e347ca709b0b')/marker",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('6c7c4432a3ea47dfa787e347ca709b0b')",
										"marker"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Delete marker",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4afae40d-173f-40bf-a5b6-67409239b58e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"type\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('34e58279cb074a2bb41fd4b4e751ed0c')/marker('5a0e75ca0463470580d402ac56fdd38a')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('34e58279cb074a2bb41fd4b4e751ed0c')",
										"marker('5a0e75ca0463470580d402ac56fdd38a')"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Clear all markers of specified material",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3152292b-83df-426b-9c76-ee0ebf4a24b6",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"var schema = {",
											"  \"type\": \"object\",",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ],",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"#/properties/status\",",
											"      \"type\": \"integer\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"#/properties/data\",",
											"      \"type\": \"object\",",
											"      \"required\": [",
											"        \"id\",",
											"        \"type\"",
											"      ],",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"$id\": \"#/properties/data/properties/id\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        },",
											"        \"type\": {",
											"          \"$id\": \"#/properties/data/properties/type\",",
											"          \"type\": \"string\",",
											"          \"pattern\": \"^(.*)$\"",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"pm.test('Schema is valid', function() {",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('bde40ec67b394b8fbc3c47bb7a487681')/markers",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('bde40ec67b394b8fbc3c47bb7a487681')",
										"markers"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Linkage",
					"item": [
						{
							"name": "✔️Create linkage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fe2372f7-859f-4792-95b6-e724106b9c85",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"status\": 200,\r",
											"            \"data\": {\r",
											"                \"displayName\": \"63001\",\r",
											"                \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                \"attachmentName\": \"test063001\",\r",
											"                \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"status\",\r",
											"        \"data\"\r",
											"    ],\r",
											"    \"additionalProperties\": true,\r",
											"    \"properties\": {\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"integer\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": 0,\r",
											"            \"examples\": [\r",
											"                200\r",
											"            ]\r",
											"        },\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"displayName\": \"63001\",\r",
											"                    \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                    \"attachmentName\": \"test063001\",\r",
											"                    \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"displayName\",\r",
											"                \"attachmentId\",\r",
											"                \"attachmentName\",\r",
											"                \"attachmentFolderPath\"\r",
											"            ],\r",
											"            \"additionalProperties\": true,\r",
											"            \"properties\": {\r",
											"                \"displayName\": {\r",
											"                    \"$id\": \"#/properties/data/properties/displayName\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The displayName schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"63001\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentId\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentId\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentId schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"e3741a3f7efc414684b6da1f5dae6837\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentName\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentName\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentName schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"test063001\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentFolderPath\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentFolderPath\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentFolderPath schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"/Public Material/wilson\"\r",
											"                    ]\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"displayName\" : \"63001\",\r\n    \"AttachmentId\" : \"e3741a3f7efc414684b6da1f5dae6837\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('369fdcfcaffb1678331ca7087e3e9ac0')/linkage",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('369fdcfcaffb1678331ca7087e3e9ac0')",
										"linkage"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Update linkage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4e98aac-6bb1-403f-aba2-a121af56fcae",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"status\": 200,\r",
											"            \"data\": {\r",
											"                \"displayName\": \"63001\",\r",
											"                \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                \"attachmentName\": \"test063001\",\r",
											"                \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"            }\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"status\",\r",
											"        \"data\"\r",
											"    ],\r",
											"    \"additionalProperties\": true,\r",
											"    \"properties\": {\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"integer\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": 0,\r",
											"            \"examples\": [\r",
											"                200\r",
											"            ]\r",
											"        },\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"object\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": {},\r",
											"            \"examples\": [\r",
											"                {\r",
											"                    \"displayName\": \"63001\",\r",
											"                    \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                    \"attachmentName\": \"test063001\",\r",
											"                    \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"                }\r",
											"            ],\r",
											"            \"required\": [\r",
											"                \"displayName\",\r",
											"                \"attachmentId\",\r",
											"                \"attachmentName\",\r",
											"                \"attachmentFolderPath\"\r",
											"            ],\r",
											"            \"additionalProperties\": true,\r",
											"            \"properties\": {\r",
											"                \"displayName\": {\r",
											"                    \"$id\": \"#/properties/data/properties/displayName\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The displayName schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"63001\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentId\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentId\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentId schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"e3741a3f7efc414684b6da1f5dae6837\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentName\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentName\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentName schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"test063001\"\r",
											"                    ]\r",
											"                },\r",
											"                \"attachmentFolderPath\": {\r",
											"                    \"$id\": \"#/properties/data/properties/attachmentFolderPath\",\r",
											"                    \"type\": \"string\",\r",
											"                    \"title\": \"The attachmentFolderPath schema\",\r",
											"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                    \"default\": \"\",\r",
											"                    \"examples\": [\r",
											"                        \"/Public Material/wilson\"\r",
											"                    ]\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"AttachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r\n    \"displayName\": \"63001-up\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('369fdcfcaffb1678331ca7087e3e9ac0')/linkage",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('369fdcfcaffb1678331ca7087e3e9ac0')",
										"linkage"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️List material's linkages by material ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5b0b20f8-11d7-40c4-aeba-fedf9dab3266",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"var schema = {\r",
											"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
											"    \"$id\": \"http://example.com/example.json\",\r",
											"    \"type\": \"object\",\r",
											"    \"title\": \"The root schema\",\r",
											"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
											"    \"default\": {},\r",
											"    \"examples\": [\r",
											"        {\r",
											"            \"status\": 200,\r",
											"            \"data\": [\r",
											"                {\r",
											"                    \"displayName\": \"63001\",\r",
											"                    \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                    \"attachmentName\": \"test063001\",\r",
											"                    \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"                }\r",
											"            ]\r",
											"        }\r",
											"    ],\r",
											"    \"required\": [\r",
											"        \"status\",\r",
											"        \"data\"\r",
											"    ],\r",
											"    \"additionalProperties\": true,\r",
											"    \"properties\": {\r",
											"        \"status\": {\r",
											"            \"$id\": \"#/properties/status\",\r",
											"            \"type\": \"integer\",\r",
											"            \"title\": \"The status schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": 0,\r",
											"            \"examples\": [\r",
											"                200\r",
											"            ]\r",
											"        },\r",
											"        \"data\": {\r",
											"            \"$id\": \"#/properties/data\",\r",
											"            \"type\": \"array\",\r",
											"            \"title\": \"The data schema\",\r",
											"            \"description\": \"An explanation about the purpose of this instance.\",\r",
											"            \"default\": [],\r",
											"            \"examples\": [\r",
											"                [\r",
											"                    {\r",
											"                        \"displayName\": \"63001\",\r",
											"                        \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                        \"attachmentName\": \"test063001\",\r",
											"                        \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"                    }\r",
											"                ]\r",
											"            ],\r",
											"            \"additionalItems\": true,\r",
											"            \"items\": {\r",
											"                \"anyOf\": [\r",
											"                    {\r",
											"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
											"                        \"type\": \"object\",\r",
											"                        \"title\": \"The first anyOf schema\",\r",
											"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                        \"default\": {},\r",
											"                        \"examples\": [\r",
											"                            {\r",
											"                                \"displayName\": \"63001\",\r",
											"                                \"attachmentId\": \"e3741a3f7efc414684b6da1f5dae6837\",\r",
											"                                \"attachmentName\": \"test063001\",\r",
											"                                \"attachmentFolderPath\": \"/Public Material/wilson\"\r",
											"                            }\r",
											"                        ],\r",
											"                        \"required\": [\r",
											"                            \"displayName\",\r",
											"                            \"attachmentId\",\r",
											"                            \"attachmentName\",\r",
											"                            \"attachmentFolderPath\"\r",
											"                        ],\r",
											"                        \"additionalProperties\": true,\r",
											"                        \"properties\": {\r",
											"                            \"displayName\": {\r",
											"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/displayName\",\r",
											"                                \"type\": \"string\",\r",
											"                                \"title\": \"The displayName schema\",\r",
											"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                                \"default\": \"\",\r",
											"                                \"examples\": [\r",
											"                                    \"63001\"\r",
											"                                ]\r",
											"                            },\r",
											"                            \"attachmentId\": {\r",
											"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/attachmentId\",\r",
											"                                \"type\": \"string\",\r",
											"                                \"title\": \"The attachmentId schema\",\r",
											"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                                \"default\": \"\",\r",
											"                                \"examples\": [\r",
											"                                    \"e3741a3f7efc414684b6da1f5dae6837\"\r",
											"                                ]\r",
											"                            },\r",
											"                            \"attachmentName\": {\r",
											"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/attachmentName\",\r",
											"                                \"type\": \"string\",\r",
											"                                \"title\": \"The attachmentName schema\",\r",
											"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                                \"default\": \"\",\r",
											"                                \"examples\": [\r",
											"                                    \"test063001\"\r",
											"                                ]\r",
											"                            },\r",
											"                            \"attachmentFolderPath\": {\r",
											"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/attachmentFolderPath\",\r",
											"                                \"type\": \"string\",\r",
											"                                \"title\": \"The attachmentFolderPath schema\",\r",
											"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
											"                                \"default\": \"\",\r",
											"                                \"examples\": [\r",
											"                                    \"/Public Material/wilson\"\r",
											"                                ]\r",
											"                            }\r",
											"                        }\r",
											"                    }\r",
											"                ],\r",
											"                \"$id\": \"#/properties/data/items\"\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.test('Schema is valid', function() {\r",
											"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('4acd54ba84a6b4466c449ebd234f13c9')/linkages",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('4acd54ba84a6b4466c449ebd234f13c9')",
										"linkages"
									]
								}
							},
							"response": []
						},
						{
							"name": "✔️Delete linkage by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b6134c1-70a7-4ffb-974d-bbdd63a29d59",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/metadata/material('369fdcfcaffb1678331ca7087e3e9ac0')/linkage('e3741a3f7efc414684b6da1f5dae6837')",
									"protocol": "{{protocol}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"{{version}}",
										"metadata",
										"material('369fdcfcaffb1678331ca7087e3e9ac0')",
										"linkage('e3741a3f7efc414684b6da1f5dae6837')"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "EDL",
			"item": [
				{
					"name": "✔️Create an empty EDL for WebEditor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1418ef4-bd70-448c-8966-b83be58273d1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"TEST_EDL\",\r\n\t\"folderId\": \"14cca2b3039449fcadd2c27c9451c1fb\",\r\n\t\"resolution\": \"HD\",\r\n\t\"frameRate\": \"STD_25_P\",\r\n\t\"scale\": \"STD_1609\",\r\n\t\"tracks\": {\r\n\t\t\"graphicTrackNumber\": 2,\r\n\t\t\"videoTrackNumber\": 1,\r\n\t\t\"audioTrackNumber\": 4\r\n\t}\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/edl",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"edl"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Initiate a render task for EDL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4995243-c399-4b53-8402-187e43b05ccf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"OUTPUT_MATERIAL_NAME\",\r\n\t\"folderId\": \"f30786e06abe799af23a73c3073a5d29\",\r\n\t\"resolution\": \"HD\"\r\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/edl/render('f800af728bb14abfb1afb8774445d8ce')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"edl",
								"render('f800af728bb14abfb1afb8774445d8ce')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rundown",
			"item": [
				{
					"name": "✔️Get rundown list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "469c54f7-a492-4de3-807c-a1b83d2589ce",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                    \"name\": \"2222\",\r",
									"                    \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a5ac3721-ce7a-4a67-b1a5-6f7319df4f95\",\r",
									"                    \"name\": \"11\",\r",
									"                    \"createDate\": \"2020-02-19T15:40:33.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"60d72095-67a6-4313-83b5-4857ff878548\",\r",
									"                    \"name\": \"1\",\r",
									"                    \"createDate\": \"2020-02-20T15:04:11.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-20T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"4570869d-6443-4a7e-a5b8-9cbcca2330aa\",\r",
									"                    \"name\": \"2\",\r",
									"                    \"createDate\": \"2020-02-21T10:16:04.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"213d3a13-ae64-49e6-a72e-3973ba849b12\",\r",
									"                    \"name\": \"D&D\",\r",
									"                    \"createDate\": \"2020-02-24T14:01:56.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-24T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7342c419-521e-48cc-838d-275751f8a050\",\r",
									"                    \"name\": \"D&D\",\r",
									"                    \"createDate\": \"2020-02-24T15:40:06.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-24T15:40:06.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a7c171bd-ff12-450f-be00-b9a1b87df784\",\r",
									"                    \"name\": \"new\",\r",
									"                    \"createDate\": \"2020-03-05T15:44:45.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-03-05T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"13db1c6e-fac7-464b-bdff-d20f764e7fde\",\r",
									"                    \"name\": \"6577\",\r",
									"                    \"createDate\": \"2020-08-04T17:00:06.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-04T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7895e1db-dd75-4ada-a848-79c4fac2cc5c\",\r",
									"                    \"name\": \"111\",\r",
									"                    \"createDate\": \"2020-08-19T10:25:13.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"9d6933ad-4838-4460-b898-4977c5831f04\",\r",
									"                    \"name\": \"wfg\",\r",
									"                    \"createDate\": \"2020-08-21T13:44:53.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"1ed4941b-d870-4f07-8032-032099d28806\",\r",
									"                    \"name\": \"smart\",\r",
									"                    \"createDate\": \"2019-08-21T20:45:31.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-08-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"e6378108-5ae0-4bb6-8db3-ee5985036e14\",\r",
									"                    \"name\": \"pppp\",\r",
									"                    \"createDate\": \"2019-08-22T18:05:18.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-08-22T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7a24ad25-0a7a-440a-b3b9-eab78f72b0dd\",\r",
									"                    \"name\": \"To oa folder\",\r",
									"                    \"createDate\": \"2019-11-06T23:25:20.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-06T00:00:00.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a1a63f48-b020-42e2-8e09-af23afba7d10\",\r",
									"                    \"name\": \"yu1115\",\r",
									"                    \"createDate\": \"2019-11-16T00:58:38.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-16T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"256ab101-5199-47e8-b50c-e87f7a70ede2\",\r",
									"                    \"name\": \"hcx-1116\",\r",
									"                    \"createDate\": \"2019-11-16T01:59:23.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-16T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"eb1c7ce7-efc6-4509-a1cb-0e94aaacfee6\",\r",
									"                    \"name\": \"hcx-1118\",\r",
									"                    \"createDate\": \"2019-11-18T18:18:38.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-18T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"20e5804c-18fa-4adb-8b9c-05410399940c\",\r",
									"                    \"name\": \"cc\",\r",
									"                    \"createDate\": \"2019-11-19T02:30:15.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a197aa05-1343-40ea-ad81-fdacf3150dda\",\r",
									"                    \"name\": \"yu_1118\",\r",
									"                    \"createDate\": \"2019-11-19T02:30:21.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T02:30:21.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"68c8f0a2-e713-490a-b4b5-754abd3fa529\",\r",
									"                    \"name\": \"hcx-1119\",\r",
									"                    \"createDate\": \"2019-11-19T18:21:09.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"2daf0ef5-a601-4eeb-a469-4e6413d7efde\",\r",
									"                    \"name\": \"123\",\r",
									"                    \"createDate\": \"2020-02-19T15:47:48.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"0a9c5a69-2bf7-4d3c-994b-344c35168220\",\r",
									"                    \"name\": \"0512\",\r",
									"                    \"createDate\": \"2020-05-12T10:29:32.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-05-12T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"ENPS1;P_NEWSW;A3721C3F-98D9-483A-A6941AE4B7908D1E\",\r",
									"                    \"name\": \"CU - Afvikling\",\r",
									"                    \"createDate\": \"2020-07-24T18:56:39.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-07-24T09:00:00.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"ed0cc017-e4ba-4e4b-8f40-5edf37757875\",\r",
									"                    \"name\": \"dd\",\r",
									"                    \"createDate\": \"2020-08-04T18:49:53.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-04T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a4076cf7-9f38-46c6-98d7-9a49d69631c0\",\r",
									"                    \"name\": \"1111\",\r",
									"                    \"createDate\": \"2020-08-12T16:18:23.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-12T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"e06b81a1-e407-41e0-9639-bfcb5a2eb1e1\",\r",
									"                    \"name\": \"1111\",\r",
									"                    \"createDate\": \"2020-08-17T11:16:08.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-17T23:59:59.000Z\"\r",
									"                }\r",
									"            ],\r",
									"            \"requestId\": \"0HM27V5E7LN8E:00000001\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\",\r",
									"        \"requestId\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                        \"name\": \"2222\",\r",
									"                        \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                        \"studioName\": \"StudioA\",\r",
									"                        \"studioMosId\": \"sony.studioA.mos\",\r",
									"                        \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"a5ac3721-ce7a-4a67-b1a5-6f7319df4f95\",\r",
									"                        \"name\": \"11\",\r",
									"                        \"createDate\": \"2020-02-19T15:40:33.000Z\",\r",
									"                        \"studioName\": \"StudioA\",\r",
									"                        \"studioMosId\": \"sony.studioA.mos\",\r",
									"                        \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/data/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                                \"name\": \"2222\",\r",
									"                                \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                                \"studioName\": \"StudioA\",\r",
									"                                \"studioMosId\": \"sony.studioA.mos\",\r",
									"                                \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"id\",\r",
									"                            \"name\",\r",
									"                            \"createDate\",\r",
									"                            \"studioName\",\r",
									"                            \"studioMosId\",\r",
									"                            \"playDate\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"id\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The id schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"ad730281-ab65-4cac-8c6f-faece6b71e93\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"name\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/name\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The name schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2222\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"createDate\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/createDate\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The createDate schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-01-10T14:41:35.000Z\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"studioName\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/studioName\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The studioName schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"StudioA\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"studioMosId\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/studioMosId\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The studioMosId schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"sony.studioA.mos\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"playDate\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/playDate\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The playDate schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-01-10T23:59:59.000Z\"\r",
									"                                ]\r",
									"                            }\r",
									"                        },\r",
									"                        \"additionalProperties\": true\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"requestId\": {\r",
									"            \"$id\": \"#/properties/requestId\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The requestId schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"0HM27V5E7LN8E:00000001\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/rundowns",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"rundowns"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get stories by rundown's id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bcbb8ad-5336-47bf-b3f3-b3315900748a",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"storyTitle\": \"No Name Story\",\r",
									"                    \"events\": [\r",
									"                        {\r",
									"                            \"eventTitle\": \"No Name Story\",\r",
									"                            \"materialId\": \"\",\r",
									"                            \"materialTitle\": \"\",\r",
									"                            \"duration\": 0,\r",
									"                            \"som\": 0,\r",
									"                            \"eom\": 0,\r",
									"                            \"version\": \"0/0\",\r",
									"                            \"channel\": \"\",\r",
									"                            \"status\": \"Idle\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ],\r",
									"            \"requestId\": \"0HM27VB1OM0DS:00000001\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\",\r",
									"        \"requestId\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"storyTitle\": \"No Name Story\",\r",
									"                        \"events\": [\r",
									"                            {\r",
									"                                \"eventTitle\": \"No Name Story\",\r",
									"                                \"materialId\": \"\",\r",
									"                                \"materialTitle\": \"\",\r",
									"                                \"duration\": 0,\r",
									"                                \"som\": 0,\r",
									"                                \"eom\": 0,\r",
									"                                \"version\": \"0/0\",\r",
									"                                \"channel\": \"\",\r",
									"                                \"status\": \"Idle\"\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/data/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"storyTitle\": \"No Name Story\",\r",
									"                                \"events\": [\r",
									"                                    {\r",
									"                                        \"eventTitle\": \"No Name Story\",\r",
									"                                        \"materialId\": \"\",\r",
									"                                        \"materialTitle\": \"\",\r",
									"                                        \"duration\": 0,\r",
									"                                        \"som\": 0,\r",
									"                                        \"eom\": 0,\r",
									"                                        \"version\": \"0/0\",\r",
									"                                        \"channel\": \"\",\r",
									"                                        \"status\": \"Idle\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"storyTitle\",\r",
									"                            \"events\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"storyTitle\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/storyTitle\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The storyTitle schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"No Name Story\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"events\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/events\",\r",
									"                                \"type\": \"array\",\r",
									"                                \"title\": \"The events schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": [],\r",
									"                                \"examples\": [\r",
									"                                    [\r",
									"                                        {\r",
									"                                            \"eventTitle\": \"No Name Story\",\r",
									"                                            \"materialId\": \"\",\r",
									"                                            \"materialTitle\": \"\",\r",
									"                                            \"duration\": 0,\r",
									"                                            \"som\": 0,\r",
									"                                            \"eom\": 0,\r",
									"                                            \"version\": \"0/0\",\r",
									"                                            \"channel\": \"\",\r",
									"                                            \"status\": \"Idle\"\r",
									"                                        }\r",
									"                                    ]\r",
									"                                ],\r",
									"                                \"additionalItems\": true,\r",
									"                                \"items\": {\r",
									"                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items\",\r",
									"                                    \"anyOf\": [\r",
									"                                        {\r",
									"                                            \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0\",\r",
									"                                            \"type\": \"object\",\r",
									"                                            \"title\": \"The first anyOf schema\",\r",
									"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                            \"default\": {},\r",
									"                                            \"examples\": [\r",
									"                                                {\r",
									"                                                    \"eventTitle\": \"No Name Story\",\r",
									"                                                    \"materialId\": \"\",\r",
									"                                                    \"materialTitle\": \"\",\r",
									"                                                    \"duration\": 0,\r",
									"                                                    \"som\": 0,\r",
									"                                                    \"eom\": 0,\r",
									"                                                    \"version\": \"0/0\",\r",
									"                                                    \"channel\": \"\",\r",
									"                                                    \"status\": \"Idle\"\r",
									"                                                }\r",
									"                                            ],\r",
									"                                            \"required\": [\r",
									"                                                \"eventTitle\",\r",
									"                                                \"materialId\",\r",
									"                                                \"materialTitle\",\r",
									"                                                \"duration\",\r",
									"                                                \"som\",\r",
									"                                                \"eom\",\r",
									"                                                \"version\",\r",
									"                                                \"channel\",\r",
									"                                                \"status\"\r",
									"                                            ],\r",
									"                                            \"properties\": {\r",
									"                                                \"eventTitle\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/eventTitle\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The eventTitle schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"No Name Story\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"materialId\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/materialId\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The materialId schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"materialTitle\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/materialTitle\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The materialTitle schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"duration\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/duration\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The duration schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"som\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/som\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The som schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"eom\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/eom\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The eom schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"version\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/version\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The version schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"0/0\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"channel\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/channel\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The channel schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"status\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/status\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The status schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"Idle\"\r",
									"                                                    ]\r",
									"                                                }\r",
									"                                            },\r",
									"                                            \"additionalProperties\": true\r",
									"                                        }\r",
									"                                    ]\r",
									"                                }\r",
									"                            }\r",
									"                        },\r",
									"                        \"additionalProperties\": true\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"requestId\": {\r",
									"            \"$id\": \"#/properties/requestId\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The requestId schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"0HM27VB1OM0DS:00000001\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/rundown('ad730281-ab65-4cac-8c6f-faece6b71e93')/stories",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"rundown('ad730281-ab65-4cac-8c6f-faece6b71e93')",
								"stories"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "✔️Get searchable fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcc0520d-a87e-4679-a3dd-575c2c172c42",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/search/searchable-fields",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"search",
								"searchable-fields"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Fulltext search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a65b5c0-ab64-4a18-b0a1-d6c5f233ce61",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"conditions\": [\n\t\t{\n\t\t\t\"field\": \"Format_ENUM\",\n\t\t\t\"value\": \"1\",\n\t\t\t\"operator\": \"and\"\n\t\t}\n\t],\n\t\"repository\": \"material\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/search?page=1&size=20&orderby=CreateTime&sort=desc",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"search"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "orderby",
									"value": "CreateTime"
								},
								{
									"key": "sort",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "IO",
			"item": [
				{
					"name": "✔️Get current user's writable storage",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19147cd6-2792-449f-9460-2fb1d86cc197",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/writable-space",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"writable-space"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Initiate upload job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9c27d9f-f5d0-4f3f-bbbc-5fae58e612c2",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jobId\", jsonData.data.jobId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"filename\": \"video.mxf\",\n  \"size\": 35345285\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/init-upload",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"init-upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Upload file chunk",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/F:/素材/split2/TEST.mp4"
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/upload('{{jobId}}')/0",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"upload('{{jobId}}')",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Query upload progress",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/upload('{{jobId}}')/progress",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"upload('{{jobId}}')",
								"progress"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Complete file upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4da8beeb-4945-4d2a-b2b0-51790f10444e",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"filePath\", jsonData.data.filePath);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/upload('{{jobId}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"upload('{{jobId}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Import file to marterial",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"path\":\"{{filePath}}\",\n\t\"materialType\":\"Video\",\n\t\"materialId\": \"4b94865dc2d847e4a2c7d7519145dd1e\",\n\t\"priority\": 99,\n\t\"tags\": {\n\t\t\"TAG1\": \"1001\"\n\t}\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/import",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Attach file to material's file group",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"path\":\"{{filePath}}\",\n\t\"materialId\": \"2253fb0846014b05bc82c1a322e366de\",\n\t\"fileGroup\": \"other\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/attach",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"attach"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create keyframe from material",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"keyframeNo\": 32,\n    \"height\": 400,\n    \"Width\": 1500\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/keyframe/material('34e58279cb074a2bb41fd4b4e751ed0c')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"keyframe",
								"material('34e58279cb074a2bb41fd4b4e751ed0c')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get all of available export sites",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/export/sites?mode=ExportClip&type=Full",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"export",
								"sites"
							],
							"query": [
								{
									"key": "mode",
									"value": "ExportClip"
								},
								{
									"key": "type",
									"value": "Full"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Export material",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"asNewName\":\"TestGGG\",\n\t\"comments\":\"Some comments here\",\n\t\"in\": 0,\n\t\"out\": 5,\n\t\"priority\": 99,\n\t\"tags\": {\n\t\t\"TAG1\": \"1002\"\n\t}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/io/export/site('29')/material('18ebb886cb8d44c8ac109ed1d30679e3')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"io",
								"export",
								"site('29')",
								"material('18ebb886cb8d44c8ac109ed1d30679e3')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Subscription",
			"item": [
				{
					"name": "✔️Subscribe event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3768aec8-e31b-484d-9746-b5c095c26c11",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"subscriberId\": {",
									"          \"type\": \"string\"",
									"        }",
									"      },",
									"      \"required\": [",
									"        \"subscriberId\"",
									"      ]",
									"    }",
									"  },",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ]",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event\": \"MaterialCreated\",\n  \"subscriber\": \"http://172.28.174.209:18000/msg-recevier\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/subscription",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"subscription"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Unsubscribe event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78ea1e9b-3554-420d-a3d7-c7323881c413",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/subscription/{{subscriberId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"subscription",
								"{{subscriberId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Test connection",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78fe0834-4b91-44a5-890b-64d5ff28fdad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"subscriber\": \"http://192.168.1.4:18000/msg-recevier\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/subscription/test-connection",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"subscription",
								"test-connection"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Monitoring",
			"item": [
				{
					"name": "✔️Task list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b90a9e72-4948-4c40-9804-1050e7857dcd",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ],",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"required\": [",
									"        \"id\",",
									"        \"type\"",
									"      ],",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"type\": {",
									"          \"$id\": \"#/properties/data/properties/type\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/tasks?page=1&size=20&orderby=CreateTime&sort=DESC&taskname=Test&tags={\"TAG1\":\"1001\"}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"tasks"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "createtime",
									"value": "2020-04-01",
									"disabled": true
								},
								{
									"key": "endtime",
									"value": "2020-04-03",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Success",
									"disabled": true
								},
								{
									"key": "orderby",
									"value": "CreateTime"
								},
								{
									"key": "sort",
									"value": "DESC"
								},
								{
									"key": "taskname",
									"value": "Test"
								},
								{
									"key": "tags",
									"value": "{\"TAG1\":\"1001\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79b72a08-f4cd-4924-9aba-6446d5bfc048",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ],",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"required\": [",
									"        \"id\",",
									"        \"type\"",
									"      ],",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"type\": {",
									"          \"$id\": \"#/properties/data/properties/type\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/task('bd7f7ff08570fe4d183c5643d46b0563')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"task('bd7f7ff08570fe4d183c5643d46b0563')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Storage stauts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5e854c7-a9f1-4047-9145-c034c5abc0d8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"storageCode\": {",
									"            \"$id\": \"#/properties/data/items/properties/storageCode\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"size\": {",
									"            \"$id\": \"#/properties/data/items/properties/size\",",
									"            \"type\": \"integer\"",
									"          },",
									"          \"assigned\": {",
									"            \"$id\": \"#/properties/data/items/properties/assigned\",",
									"            \"type\": \"integer\"",
									"          },",
									"          \"used\": {",
									"            \"$id\": \"#/properties/data/items/properties/used\",",
									"            \"type\": \"integer\"",
									"          },",
									"          \"files\": {",
									"            \"$id\": \"#/properties/data/items/properties/files\",",
									"            \"type\": \"integer\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/statistics/storage",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"statistics",
								"storage"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Service stauts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3773e61d-2df6-4ee0-bec1-35aee549ff33",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"name\": {",
									"            \"$id\": \"#/properties/data/items/properties/name\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"nodes\": {",
									"            \"$id\": \"#/properties/data/items/properties/nodes\",",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"$id\": \"#/properties/data/items/properties/nodes/items\",",
									"              \"type\": \"object\",",
									"              \"properties\": {",
									"                \"hostname\": {",
									"                  \"$id\": \"#/properties/data/items/properties/nodes/items/properties/hostname\",",
									"                  \"type\": \"string\",",
									"                  \"pattern\": \"^(.*)$\"",
									"                },",
									"                \"status\": {",
									"                  \"$id\": \"#/properties/data/items/properties/nodes/items/properties/status\",",
									"                  \"type\": \"string\",",
									"                  \"pattern\": \"^(.*)$\"",
									"                },",
									"                \"uptime\": {",
									"                  \"$id\": \"#/properties/data/items/properties/nodes/items/properties/uptime\",",
									"                  \"type\": \"integer\"",
									"                },",
									"                \"downtime\": {",
									"                  \"$id\": \"#/properties/data/items/properties/nodes/items/properties/downtime\",",
									"                  \"type\": \"integer\"",
									"                }",
									"              }",
									"            }",
									"          },",
									"          \"status\": {",
									"            \"$id\": \"#/properties/data/items/properties/status\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"uptime\": {",
									"            \"$id\": \"#/properties/data/items/properties/uptime\",",
									"            \"type\": \"integer\"",
									"          },",
									"          \"downtime\": {",
									"            \"$id\": \"#/properties/data/items/properties/downtime\",",
									"            \"type\": \"integer\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/statistics/services",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"statistics",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update task's tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c875da8-db1c-414b-84f0-eba46ba7c06d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ],",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"required\": [",
									"        \"id\",",
									"        \"type\"",
									"      ],",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"type\": {",
									"          \"$id\": \"#/properties/data/properties/type\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/task('d1cd51244ec04cef8e17f9f08dc38861')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"task('d1cd51244ec04cef8e17f9f08dc38861')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update task's priority",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2edd855-6a25-48cb-bdd1-c6fa92778e1f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ],",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"required\": [",
									"        \"id\",",
									"        \"type\"",
									"      ],",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"type\": {",
									"          \"$id\": \"#/properties/data/properties/type\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/task('d1cd51244ec04cef8e17f9f08dc38861')/priority('90')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"task('d1cd51244ec04cef8e17f9f08dc38861')",
								"priority('90')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Delete task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0efa90ca-f86d-4955-87b7-0257f71e5d12",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"required\": [",
									"    \"status\",",
									"    \"data\"",
									"  ],",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"required\": [",
									"        \"id\",",
									"        \"type\"",
									"      ],",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"type\": {",
									"          \"$id\": \"#/properties/data/properties/type\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/monitoring/task('7f0170f7617c2157315fad52167b4357')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"monitoring",
								"task('7f0170f7617c2157315fad52167b4357')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "System",
			"item": [
				{
					"name": "✔️Get root group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe0ea45-96a1-4da4-b6b5-19229460b2b2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"code\": {",
									"          \"$id\": \"#/properties/data/properties/code\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"name\": {",
									"          \"$id\": \"#/properties/data/properties/name\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"rootGroup\", jsonData.data.code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group/root",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group",
								"root"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get defined permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8483f925-fad0-4168-88b7-844f547e91b0",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"key\": {",
									"            \"$id\": \"#/properties/data/items/properties/key\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"description\": {",
									"            \"$id\": \"#/properties/data/items/properties/description\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/permissions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get group by code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a996eddf-487b-4ded-b235-e0bab3f8d1b2",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"code\": {",
									"          \"$id\": \"#/properties/data/properties/code\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"name\": {",
									"          \"$id\": \"#/properties/data/properties/name\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{rootGroup}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{rootGroup}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get all roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c3c6e9e-9ee5-431e-82e0-57f88d7b7f2d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"code\": {",
									"            \"$id\": \"#/properties/data/items/properties/code\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"name\": {",
									"            \"$id\": \"#/properties/data/items/properties/name\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"description\": {",
									"            \"$id\": \"#/properties/data/items/properties/description\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"roleCode\", jsonData.data[0].code);",
									"pm.environment.set(\"otherRole\", jsonData.data[1].code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/roles",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️List all of sbugroups under group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a84fdf2e-b1ee-4d49-b264-84a87dfb5ba1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"code\": {",
									"            \"$id\": \"#/properties/data/items/properties/code\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"name\": {",
									"            \"$id\": \"#/properties/data/items/properties/name\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"permissions\": {",
									"            \"$id\": \"#/properties/data/items/properties/permissions\",",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"              \"$id\": \"#/properties/data/items/properties/permissions/items\",",
									"              \"type\": \"string\",",
									"              \"pattern\": \"^(.*)$\"",
									"            }",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{rootGroup}}')/subgroups",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{rootGroup}}')",
								"subgroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99edf730-342e-4c1b-b29e-c0fb8219ef51",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"code\": {",
									"          \"$id\": \"#/properties/data/properties/code\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"name\": {",
									"          \"$id\": \"#/properties/data/properties/name\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"description\": {",
									"          \"$id\": \"#/properties/data/properties/description\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"newGroup\", jsonData.data.code);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"apigwv2_tester\",\n\t\"description\": \"This is a test group created via API auto tester\",\n\t\"parentCode\": \"{{rootGroup}}\",\n\t\"permissions\": [\n\t    \"APIGW_DEFAULT_IO\",\n\t    \"APIGW_DEFAULT_Metadata\",\n\t    \"APIGW_DEFAULT_Monitoring\",\n\t    \"APIGW_DEFAULT_Rundown\",\n\t    \"APIGW_DEFAULT_Search\",\n\t    \"APIGW_DEFAULT_Subscription\",\n\t    \"APIGW_DEFAULT_System\"\n\t]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Modify group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f39073b1-7d05-4c43-b588-56fdaf646eb4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"status\": 200,",
									"            \"data\": {",
									"                \"code\": \"Daaaabg\",",
									"                \"parentCode\": \"Daaa\",",
									"                \"name\": \"xxx\",",
									"                \"description\": \"This is a test group created via API auto tester\",",
									"                \"permissions\": [",
									"                    \"APIGW_DEFAULT_IO\",",
									"                    \"APIGW_DEFAULT_System\"",
									"                ]",
									"            },",
									"            \"requestId\": \"0HM28RLHGDSF0:00000003\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"status\",",
									"        \"data\",",
									"        \"requestId\"",
									"    ],",
									"    \"properties\": {",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"integer\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": 0,",
									"            \"examples\": [",
									"                200",
									"            ]",
									"        },",
									"        \"data\": {",
									"            \"$id\": \"#/properties/data\",",
									"            \"type\": \"object\",",
									"            \"title\": \"The data schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": {},",
									"            \"examples\": [",
									"                {",
									"                    \"code\": \"Daaaabg\",",
									"                    \"parentCode\": \"Daaa\",",
									"                    \"name\": \"xxx\",",
									"                    \"description\": \"This is a test group created via API auto tester\",",
									"                    \"permissions\": [",
									"                        \"APIGW_DEFAULT_IO\",",
									"                        \"APIGW_DEFAULT_System\"",
									"                    ]",
									"                }",
									"            ],",
									"            \"required\": [",
									"                \"code\",",
									"                \"parentCode\",",
									"                \"name\",",
									"                \"description\",",
									"                \"permissions\"",
									"            ],",
									"            \"properties\": {",
									"                \"code\": {",
									"                    \"$id\": \"#/properties/data/properties/code\",",
									"                    \"type\": \"string\",",
									"                    \"title\": \"The code schema\",",
									"                    \"description\": \"An explanation about the purpose of this instance.\",",
									"                    \"default\": \"\",",
									"                    \"examples\": [",
									"                        \"Daaaabg\"",
									"                    ]",
									"                },",
									"                \"parentCode\": {",
									"                    \"$id\": \"#/properties/data/properties/parentCode\",",
									"                    \"type\": \"string\",",
									"                    \"title\": \"The parentCode schema\",",
									"                    \"description\": \"An explanation about the purpose of this instance.\",",
									"                    \"default\": \"\",",
									"                    \"examples\": [",
									"                        \"Daaa\"",
									"                    ]",
									"                },",
									"                \"name\": {",
									"                    \"$id\": \"#/properties/data/properties/name\",",
									"                    \"type\": \"string\",",
									"                    \"title\": \"The name schema\",",
									"                    \"description\": \"An explanation about the purpose of this instance.\",",
									"                    \"default\": \"\",",
									"                    \"examples\": [",
									"                        \"xxx\"",
									"                    ]",
									"                },",
									"                \"description\": {",
									"                    \"$id\": \"#/properties/data/properties/description\",",
									"                    \"type\": \"string\",",
									"                    \"title\": \"The description schema\",",
									"                    \"description\": \"An explanation about the purpose of this instance.\",",
									"                    \"default\": \"\",",
									"                    \"examples\": [",
									"                        \"This is a test group created via API auto tester\"",
									"                    ]",
									"                },",
									"                \"permissions\": {",
									"                    \"$id\": \"#/properties/data/properties/permissions\",",
									"                    \"type\": \"array\",",
									"                    \"title\": \"The permissions schema\",",
									"                    \"description\": \"An explanation about the purpose of this instance.\",",
									"                    \"default\": [],",
									"                    \"examples\": [",
									"                        [",
									"                            \"APIGW_DEFAULT_IO\",",
									"                            \"APIGW_DEFAULT_System\"",
									"                        ]",
									"                    ],",
									"                    \"additionalItems\": true,",
									"                    \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/permissions/items\",",
									"                        \"anyOf\": [",
									"                            {",
									"                                \"$id\": \"#/properties/data/properties/permissions/items/anyOf/0\",",
									"                                \"type\": \"string\",",
									"                                \"title\": \"The first anyOf schema\",",
									"                                \"description\": \"An explanation about the purpose of this instance.\",",
									"                                \"default\": \"\",",
									"                                \"examples\": [",
									"                                    \"APIGW_DEFAULT_IO\",",
									"                                    \"APIGW_DEFAULT_System\"",
									"                                ]",
									"                            }",
									"                        ]",
									"                    }",
									"                }",
									"            },",
									"            \"additionalProperties\": true",
									"        },",
									"        \"requestId\": {",
									"            \"$id\": \"#/properties/requestId\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The requestId schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"0HM28RLHGDSF0:00000003\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\": \"{{newGroup}}\",\r\n    \"parentCode\": \"{{rootGroup}}\",\r\n    \"name\": \"xxx\",\r\n    \"description\": \"xxxx\",\r\n    \"permissions\": [\r\n        \"APIGW_DEFAULT_IO\",\r\n        \"APIGW_DEFAULT_System\"\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98723d4f-7ef3-417b-8b86-cf35c95a1680",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									"pm.environment.set(\"newUser\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"loginName\": \"apigwv2_tester\",\n\t\"showName\": \"apigwv2_tester\",\n\t\"password\": \"apigwv2_tester\",\n\t\"email\": \"apigwv2_tester@domain.com\",\n\t\"phoneNumber\": \"1000000\",\n\t\"avatarUrl\": \"https://via.placeholder.com/120/000000/FFFFFF\",\n\t\"groupCodes\": [\"{{newGroup}}\"],\n\t\"roleCodes\": [\"{{roleCode}}\"]\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59b0c0d8-a9e7-4a7a-89cb-26aefa0716e4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get user by login name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31d9be2c-c538-448b-9755-068440292d13",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/login-name('sobey%5cwilson')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"login-name('sobey%5cwilson')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Assign an user to role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "000f72a5-b03c-454b-8f1c-2564a6d6792c",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/role('{{otherRole}}')/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"role('{{otherRole}}')",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Modify user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "17707544-d453-4cf7-8bc7-ce28b3e44793",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{newUser}}\",\n    \"avatarUrl\": \"https://via.placeholder.com/120/111111/222222\",\n    \"email\": \"modify@domain.com\",\n    \"showName\": \"Modified user' show name\",\n    \"phoneNumber\": \"00000000\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Assign an user to group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0eb6ffb1-f1ab-4a81-ac96-bbd498a3ef23",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"groupCode\": {",
									"          \"$id\": \"#/properties/data/properties/groupCode\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"userId\": {",
									"          \"$id\": \"#/properties/data/properties/userId\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{newGroup}}')/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{newGroup}}')",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get user's parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f67b9df-0cc9-4c23-9be5-2224e60d0b90",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"key\": {",
									"            \"$id\": \"#/properties/data/items/properties/key\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"value\": {",
									"            \"$id\": \"#/properties/data/items/properties/value\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"default\": {",
									"            \"$id\": \"#/properties/data/items/properties/default\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"description\": {",
									"            \"$id\": \"#/properties/data/items/properties/description\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user('{{newUser}}')/parameters",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user('{{newUser}}')",
								"parameters"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Modify user's parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00ec6a68-33c0-40c1-bfaa-fc07960ac772",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
									"  \"$id\": \"http://example.com/root.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"key\": {",
									"          \"$id\": \"#/properties/data/properties/key\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"value\": {",
									"          \"$id\": \"#/properties/data/properties/value\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"default\": {",
									"          \"$id\": \"#/properties/data/properties/default\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"description\": {",
									"          \"$id\": \"#/properties/data/properties/description\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"ET_PROMPT_STORAGE_WARNING\",\n    \"value\": \"0\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user('{{newUser}}')/parameter",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user('{{newUser}}')",
								"parameter"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️List all of users under group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9fa58d9b-b3aa-413a-b6b4-6c869eeedb50",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"$id\": \"#/properties/data/items/properties/id\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"avatarUrl\": {",
									"            \"$id\": \"#/properties/data/items/properties/avatarUrl\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"email\": {",
									"            \"$id\": \"#/properties/data/items/properties/email\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"loginName\": {",
									"            \"$id\": \"#/properties/data/items/properties/loginName\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"showName\": {",
									"            \"$id\": \"#/properties/data/items/properties/showName\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"phoneNumber\": {",
									"            \"$id\": \"#/properties/data/items/properties/phoneNumber\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"createTime\": {",
									"            \"$id\": \"#/properties/data/items/properties/createTime\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"status\": {",
									"            \"$id\": \"#/properties/data/items/properties/status\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{newGroup}}')/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{newGroup}}')",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️List all of users under role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81cf4ab8-4232-47a1-a3e5-6972b1db4048",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"array\",",
									"      \"items\": {",
									"        \"$id\": \"#/properties/data/items\",",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"          \"id\": {",
									"            \"$id\": \"#/properties/data/items/properties/id\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"email\": {",
									"            \"$id\": \"#/properties/data/items/properties/email\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"loginName\": {",
									"            \"$id\": \"#/properties/data/items/properties/loginName\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"showName\": {",
									"            \"$id\": \"#/properties/data/items/properties/showName\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"phoneNumber\": {",
									"            \"$id\": \"#/properties/data/items/properties/phoneNumber\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"createTime\": {",
									"            \"$id\": \"#/properties/data/items/properties/createTime\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          },",
									"          \"status\": {",
									"            \"$id\": \"#/properties/data/items/properties/status\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/role('{{roleCode}}')/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"role('{{roleCode}}')",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Remove an user from group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3c56928-8fc9-4e7f-b1b9-2a5213764a1b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"groupCode\": {",
									"          \"$id\": \"#/properties/data/properties/groupCode\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"userId\": {",
									"          \"$id\": \"#/properties/data/properties/userId\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{newGroup}}')/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{newGroup}}')",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Remove an user from role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec61f09e-9408-4cc0-ab29-be4e57aa303b",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"avatarUrl\": {",
									"          \"$id\": \"#/properties/data/properties/avatarUrl\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"email\": {",
									"          \"$id\": \"#/properties/data/properties/email\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"phoneNumber\": {",
									"          \"$id\": \"#/properties/data/properties/phoneNumber\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"groups\": {",
									"          \"$id\": \"#/properties/data/properties/groups\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/groups/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/groups/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"roles\": {",
									"          \"$id\": \"#/properties/data/properties/roles\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/roles/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"code\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/code\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"name\": {",
									"                \"$id\": \"#/properties/data/properties/roles/items/properties/name\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"permissions\": {",
									"          \"$id\": \"#/properties/data/properties/permissions\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/permissions/items\",",
									"            \"type\": \"string\",",
									"            \"pattern\": \"^(.*)$\"",
									"          }",
									"        },",
									"        \"storages\": {",
									"          \"$id\": \"#/properties/data/properties/storages\",",
									"          \"type\": \"array\",",
									"          \"items\": {",
									"            \"$id\": \"#/properties/data/properties/storages/items\",",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"              \"poolCode\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/poolCode\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"description\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/description\",",
									"                \"type\": \"string\",",
									"                \"pattern\": \"^(.*)$\"",
									"              },",
									"              \"dependsOnGroup\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup\",",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                  \"groupCode\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupCode\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  },",
									"                  \"groupName\": {",
									"                    \"$id\": \"#/properties/data/properties/storages/items/properties/dependsOnGroup/properties/groupName\",",
									"                    \"type\": \"string\",",
									"                    \"pattern\": \"^(.*)$\"",
									"                  }",
									"                }",
									"              },",
									"              \"units\": {",
									"                \"$id\": \"#/properties/data/properties/storages/items/properties/units\",",
									"                \"type\": \"array\",",
									"                \"items\": {",
									"                  \"$id\": \"#/properties/data/properties/storages/items/properties/units/items\",",
									"                  \"type\": \"object\",",
									"                  \"properties\": {",
									"                    \"unitCode\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/unitCode\",",
									"                      \"type\": \"string\",",
									"                      \"pattern\": \"^(.*)$\"",
									"                    },",
									"                    \"label\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label\",",
									"                      \"type\": \"array\",",
									"                      \"items\": {",
									"                        \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/label/items\",",
									"                        \"type\": \"string\",",
									"                        \"pattern\": \"^(.*)$\"",
									"                      }",
									"                    },",
									"                    \"files\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/files\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"size\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/size\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"used\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/used\",",
									"                      \"type\": \"integer\"",
									"                    },",
									"                    \"roots\": {",
									"                      \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots\",",
									"                      \"type\": \"object\",",
									"                      \"properties\": {",
									"                        \"http\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/http\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        },",
									"                        \"unc\": {",
									"                          \"$id\": \"#/properties/data/properties/storages/items/properties/units/items/properties/roots/properties/unc\",",
									"                          \"type\": \"string\",",
									"                          \"pattern\": \"^(.*)$\"",
									"                        }",
									"                      }",
									"                    }",
									"                  }",
									"                }",
									"              }",
									"            }",
									"          }",
									"        },",
									"        \"createTime\": {",
									"          \"$id\": \"#/properties/data/properties/createTime\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"status\": {",
									"          \"$id\": \"#/properties/data/properties/status\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/role('{{roleCode}}')/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"role('{{roleCode}}')",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52ca3fa8-0328-45fb-a9ec-9dd3d0adc14a",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"id\": {",
									"          \"$id\": \"#/properties/data/properties/id\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"loginName\": {",
									"          \"$id\": \"#/properties/data/properties/loginName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"showName\": {",
									"          \"$id\": \"#/properties/data/properties/showName\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/user('{{newUser}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"user('{{newUser}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Delete group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "29958cc5-f3b1-4b0b-a4b5-e1db2152fbdd",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"subscriberId\", jsonData.data.subscriberId);",
									"});",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"status\": {",
									"      \"$id\": \"#/properties/status\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"data\": {",
									"      \"$id\": \"#/properties/data\",",
									"      \"type\": \"object\",",
									"      \"properties\": {",
									"        \"code\": {",
									"          \"$id\": \"#/properties/data/properties/code\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"parentCode\": {",
									"          \"$id\": \"#/properties/data/properties/parentCode\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        },",
									"        \"name\": {",
									"          \"$id\": \"#/properties/data/properties/name\",",
									"          \"type\": \"string\",",
									"          \"pattern\": \"^(.*)$\"",
									"        }",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/system/group('{{newGroup}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"system",
								"group('{{newGroup}}')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ingest",
			"item": [
				{
					"name": "✔️List all channels",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eab0984e-4b6e-4b3c-b3dd-2766f916ef39",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"id\": 2,\r",
									"                    \"name\": \"CH1\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 4,\r",
									"                    \"name\": \"CH2\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 6,\r",
									"                    \"name\": \"CH3\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 8,\r",
									"                    \"name\": \"CH4-ÑÁÉÍÓÚÜñáéíóúüöäü0ß\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 18,\r",
									"                    \"name\": \"test1\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 20,\r",
									"                    \"name\": \"test2\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 22,\r",
									"                    \"name\": \"test3\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"id\": 2,\r",
									"                        \"name\": \"CH1\"\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": 4,\r",
									"                        \"name\": \"CH2\"\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"id\": 2,\r",
									"                                \"name\": \"CH1\"\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"id\",\r",
									"                            \"name\"\r",
									"                        ],\r",
									"                        \"additionalProperties\": true,\r",
									"                        \"properties\": {\r",
									"                            \"id\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"The id schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": 0,\r",
									"                                \"examples\": [\r",
									"                                    2\r",
									"                                ]\r",
									"                            },\r",
									"                            \"name\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/name\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The name schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"CH1\"\r",
									"                                ]\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                ],\r",
									"                \"$id\": \"#/properties/data/items\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/channels",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"channels"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️List all signals",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "611c9399-936d-4b08-ab4f-7caadd5d75b2",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"id\": 2286,\r",
									"                    \"name\": \"()_+-=\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2282,\r",
									"                    \"name\": \"(UHD\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2294,\r",
									"                    \"name\": \"HD\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2324,\r",
									"                    \"name\": \"hd-1\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2318,\r",
									"                    \"name\": \"hd-2\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2284,\r",
									"                    \"name\": \"HD-2\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2321,\r",
									"                    \"name\": \"hd-3\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2304,\r",
									"                    \"name\": \"HD-3\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2329,\r",
									"                    \"name\": \"hd-4\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2306,\r",
									"                    \"name\": \"HD-4\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2328,\r",
									"                    \"name\": \"hd-5\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2316,\r",
									"                    \"name\": \"HD-5\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2308,\r",
									"                    \"name\": \"HD-6\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2310,\r",
									"                    \"name\": \"HD-7\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2322,\r",
									"                    \"name\": \"HD-8\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2312,\r",
									"                    \"name\": \"HD-9\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2314,\r",
									"                    \"name\": \"HD-10\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2330,\r",
									"                    \"name\": \"HD-16\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2334,\r",
									"                    \"name\": \"HD-17\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2332,\r",
									"                    \"name\": \"HD-18\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2337,\r",
									"                    \"name\": \"HD-19\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2338,\r",
									"                    \"name\": \"HD-20\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2340,\r",
									"                    \"name\": \"HD-21\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2342,\r",
									"                    \"name\": \"HD-22\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2344,\r",
									"                    \"name\": \"HD-23\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2346,\r",
									"                    \"name\": \"HD-24\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2350,\r",
									"                    \"name\": \"HD-25\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2348,\r",
									"                    \"name\": \"HD-26\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2352,\r",
									"                    \"name\": \"HD-27\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2354,\r",
									"                    \"name\": \"HD-28\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2356,\r",
									"                    \"name\": \"HD-29\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2358,\r",
									"                    \"name\": \"HD-30\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2362,\r",
									"                    \"name\": \"HD-31\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2360,\r",
									"                    \"name\": \"HD-32\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2364,\r",
									"                    \"name\": \"HD-33\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2366,\r",
									"                    \"name\": \"HD-34\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2368,\r",
									"                    \"name\": \"HD-35\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2370,\r",
									"                    \"name\": \"HD-36\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2372,\r",
									"                    \"name\": \"HD-37\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2374,\r",
									"                    \"name\": \"HD-38\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2376,\r",
									"                    \"name\": \"HD-39\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2378,\r",
									"                    \"name\": \"HD-40\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2380,\r",
									"                    \"name\": \"HD-41\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2298,\r",
									"                    \"name\": \"ÑÁÉÍÓÚÜ\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2292,\r",
									"                    \"name\": \"öäü0ß\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2300,\r",
									"                    \"name\": \"rtmp-pal-1\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2302,\r",
									"                    \"name\": \"rtmp-PAL-2\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2296,\r",
									"                    \"name\": \"SD\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2290,\r",
									"                    \"name\": \"VTR\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2288,\r",
									"                    \"name\": \"VTR-111\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"id\": 2286,\r",
									"                        \"name\": \"()_+-=\"\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": 2282,\r",
									"                        \"name\": \"(UHD\"\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"id\": 2286,\r",
									"                                \"name\": \"()_+-=\"\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"id\",\r",
									"                            \"name\"\r",
									"                        ],\r",
									"                        \"additionalProperties\": true,\r",
									"                        \"properties\": {\r",
									"                            \"id\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"The id schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": 0,\r",
									"                                \"examples\": [\r",
									"                                    2286\r",
									"                                ]\r",
									"                            },\r",
									"                            \"name\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/name\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The name schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"()_+-=\"\r",
									"                                ]\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                ],\r",
									"                \"$id\": \"#/properties/data/items\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/signals",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"signals"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️List all ingestion tasks in a date range",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9cbed42-ba01-42e2-b04e-212a9d31d767",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-12 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-12 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-11 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-11 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-10 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-10 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-09 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-09 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-08 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-08 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-08 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-08 22:13:14\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-07 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-07 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-07 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-07 22:13:14\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-06 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-06 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-06 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-06 22:13:14\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-05 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-05 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-04 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-04 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-03 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-03 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2649,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-02 19:41:49\",\r",
									"                    \"endTime\": \"2020-07-02 20:29:51\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2648,\r",
									"                    \"title\": \"DefaultCH120200701184540\",\r",
									"                    \"recordingType\": \"ScheduledRecording\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-01 18:46:36\",\r",
									"                    \"endTime\": \"2020-07-01 19:32:22\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2650,\r",
									"                    \"title\": \"DefaultCH120200701194149\",\r",
									"                    \"recordingType\": \"PeriodicDaily\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2324,\r",
									"                    \"startTime\": \"2020-07-01 19:41:46\",\r",
									"                    \"endTime\": \"2020-07-01 20:29:52\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2651,\r",
									"                    \"title\": \"DefaultCH120200701205409\",\r",
									"                    \"recordingType\": \"ScheduledRecording\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2294,\r",
									"                    \"startTime\": \"2020-07-01 20:54:13\",\r",
									"                    \"endTime\": \"2020-07-01 20:54:17\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2545,\r",
									"                    \"title\": \"UntitledMaterial\",\r",
									"                    \"recordingType\": \"ScheduledRecording\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2294,\r",
									"                    \"startTime\": \"2020-06-28 16:21:45\",\r",
									"                    \"endTime\": \"2020-06-30 19:13:35\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2545,\r",
									"                    \"title\": \"UntitledMaterial\",\r",
									"                    \"recordingType\": \"ScheduledRecording\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2294,\r",
									"                    \"startTime\": \"2020-06-28 16:21:45\",\r",
									"                    \"endTime\": \"2020-06-30 19:13:35\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": 2545,\r",
									"                    \"title\": \"UntitledMaterial\",\r",
									"                    \"recordingType\": \"ScheduledRecording\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2294,\r",
									"                    \"startTime\": \"2020-06-28 16:21:45\",\r",
									"                    \"endTime\": \"2020-06-30 19:13:35\"\r",
									"                }\r",
									"            ]\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"id\": 2649,\r",
									"                        \"title\": \"DefaultCH120200701194149\",\r",
									"                        \"recordingType\": \"PeriodicDaily\",\r",
									"                        \"channelId\": 2,\r",
									"                        \"signalId\": 2324,\r",
									"                        \"startTime\": \"2020-07-12 19:41:49\",\r",
									"                        \"endTime\": \"2020-07-12 20:29:51\"\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": 2649,\r",
									"                        \"title\": \"DefaultCH120200701194149\",\r",
									"                        \"recordingType\": \"PeriodicDaily\",\r",
									"                        \"channelId\": 2,\r",
									"                        \"signalId\": 2324,\r",
									"                        \"startTime\": \"2020-07-11 19:41:49\",\r",
									"                        \"endTime\": \"2020-07-11 20:29:51\"\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"id\": 2649,\r",
									"                                \"title\": \"DefaultCH120200701194149\",\r",
									"                                \"recordingType\": \"PeriodicDaily\",\r",
									"                                \"channelId\": 2,\r",
									"                                \"signalId\": 2324,\r",
									"                                \"startTime\": \"2020-07-12 19:41:49\",\r",
									"                                \"endTime\": \"2020-07-12 20:29:51\"\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"id\",\r",
									"                            \"title\",\r",
									"                            \"recordingType\",\r",
									"                            \"channelId\",\r",
									"                            \"signalId\",\r",
									"                            \"startTime\",\r",
									"                            \"endTime\"\r",
									"                        ],\r",
									"                        \"additionalProperties\": true,\r",
									"                        \"properties\": {\r",
									"                            \"id\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"The id schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": 0,\r",
									"                                \"examples\": [\r",
									"                                    2649\r",
									"                                ]\r",
									"                            },\r",
									"                            \"title\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/title\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The title schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"DefaultCH120200701194149\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"recordingType\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/recordingType\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The recordingType schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"PeriodicDaily\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"channelId\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/channelId\",\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"The channelId schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": 0,\r",
									"                                \"examples\": [\r",
									"                                    2\r",
									"                                ]\r",
									"                            },\r",
									"                            \"signalId\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/signalId\",\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"The signalId schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": 0,\r",
									"                                \"examples\": [\r",
									"                                    2324\r",
									"                                ]\r",
									"                            },\r",
									"                            \"startTime\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/startTime\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The startTime schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-07-12 19:41:49\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"endTime\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/endTime\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The endTime schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-07-12 20:29:51\"\r",
									"                                ]\r",
									"                            }\r",
									"                        }\r",
									"                    }\r",
									"                ],\r",
									"                \"$id\": \"#/properties/data/items\"\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingests?startDate=2020-07-01 18:09:00&endDate=2020-07-08 23:09:00",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingests"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2020-07-01 18:09:00"
								},
								{
									"key": "endDate",
									"value": "2020-07-08 23:09:00"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get ingestion task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58d62f05-73e9-46ea-90b8-9d596c76cefb",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2661,\r",
									"                \"title\": \"Wilson_test_update\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2321,\r",
									"                \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName_up\",\r",
									"                    \"comments\": \"Comments_up\",\r",
									"                    \"jounalist\": \"Jounalist_up\",\r",
									"                    \"category\": \"Category_up\",\r",
									"                    \"program\": \"Program_up\",\r",
									"                    \"rights\": \"Rights_up\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2661,\r",
									"                    \"title\": \"Wilson_test_update\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2321,\r",
									"                    \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName_up\",\r",
									"                        \"comments\": \"Comments_up\",\r",
									"                        \"jounalist\": \"Jounalist_up\",\r",
									"                        \"category\": \"Category_up\",\r",
									"                        \"program\": \"Program_up\",\r",
									"                        \"rights\": \"Rights_up\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2661\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson_test_update\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2321\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-06 20:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName_up\",\r",
									"                            \"comments\": \"Comments_up\",\r",
									"                            \"jounalist\": \"Jounalist_up\",\r",
									"                            \"category\": \"Category_up\",\r",
									"                            \"program\": \"Program_up\",\r",
									"                            \"rights\": \"Rights_up\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights_up\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest('{{ingestId}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest('{{ingestId}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create ingestion task (ScheduledRecording type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cca9581f-ba08-4054-b6df-71022ab65fa0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2652,\r",
									"                \"title\": \"Periodic-Weekly-Api\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2284,\r",
									"                \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName\",\r",
									"                    \"comments\": \"Comments\",\r",
									"                    \"jounalist\": \"Jounalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"program\": \"Program\",\r",
									"                    \"rights\": \"Rights\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName\",\r",
									"                        \"comments\": \"Comments\",\r",
									"                        \"jounalist\": \"Jounalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"program\": \"Program\",\r",
									"                        \"rights\": \"Rights\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"folderId\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2652\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Periodic-Weekly-Api\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2284\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-02 21:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName\",\r",
									"                            \"comments\": \"Comments\",\r",
									"                            \"jounalist\": \"Jounalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"program\": \"Program\",\r",
									"                            \"rights\": \"Rights\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"pm.globals.set(\"ScheduledRecording\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"ScheduledRecording-Api\",\r\n    \"folderId\": \"c2779b8cd40e1c228b4cc20008078954\",\r\n    \"channelId\": -1,\r\n    \"signalId\": 68,\r\n    \"recordingType\": \"ScheduledRecording\",\r\n    \"startDate\": \"2021-10-09 21:13:14\",\r\n    \"endDate\": \"2021-10-09 22:13:14\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName\",\r\n        \"Comments\": \"Comments\",\r\n        \"Jounalist\": \"Jounalist\",\r\n        \"Category\": \"Category\",\r\n        \"Program\": \"Program\",\r\n        \"Rights\": \"Rights\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create ingestion task (ManualStart type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bc03703b-edd9-4b94-89c5-14a66bbaa6e4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2652,\r",
									"                \"title\": \"Periodic-Weekly-Api\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2284,\r",
									"                \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName\",\r",
									"                    \"comments\": \"Comments\",\r",
									"                    \"jounalist\": \"Jounalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"program\": \"Program\",\r",
									"                    \"rights\": \"Rights\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName\",\r",
									"                        \"comments\": \"Comments\",\r",
									"                        \"jounalist\": \"Jounalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"program\": \"Program\",\r",
									"                        \"rights\": \"Rights\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"folderId\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2652\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Periodic-Weekly-Api\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2284\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-02 21:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName\",\r",
									"                            \"comments\": \"Comments\",\r",
									"                            \"jounalist\": \"Jounalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"program\": \"Program\",\r",
									"                            \"rights\": \"Rights\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"pm.globals.set(\"ManualStart\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"ManualStart-Api\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"channelId\": 2,\r\n    \"signalId\": 2284,\r\n    \"recordingType\": \"ManualStart\",\r\n    \"startDate\": \"2020-07-02 21:13:14\",\r\n    \"endDate\": \"2020-07-02 22:13:14\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName\",\r\n        \"Comments\": \"Comments\",\r\n        \"Jounalist\": \"Jounalist\",\r\n        \"Category\": \"Category\",\r\n        \"Program\": \"Program\",\r\n        \"Rights\": \"Rights\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create ingestion task (Periodic type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c48321b-7e6f-44fd-85d8-455a158e6120",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2652,\r",
									"                \"title\": \"Periodic-Weekly-Api\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2284,\r",
									"                \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName\",\r",
									"                    \"comments\": \"Comments\",\r",
									"                    \"jounalist\": \"Jounalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"program\": \"Program\",\r",
									"                    \"rights\": \"Rights\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2652,\r",
									"                    \"title\": \"Periodic-Weekly-Api\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2284,\r",
									"                    \"startTime\": \"2020-07-02 21:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName\",\r",
									"                        \"comments\": \"Comments\",\r",
									"                        \"jounalist\": \"Jounalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"program\": \"Program\",\r",
									"                        \"rights\": \"Rights\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"folderId\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2652\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Periodic-Weekly-Api\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2284\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-02 21:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName\",\r",
									"                            \"comments\": \"Comments\",\r",
									"                            \"jounalist\": \"Jounalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"program\": \"Program\",\r",
									"                            \"rights\": \"Rights\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"pm.globals.set(\"ingestId\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Periodic-Weekly-Api\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"channelId\": -1,\r\n    \"signalId\": 68,\r\n    \"recordingType\": \"PeriodicWeekly\",\r\n    \"startDate\": \"2021-07-02 21:13:14\",\r\n    \"endDate\": \"2021-07-02 22:13:14\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName\",\r\n        \"Comments\": \"Comments\",\r\n        \"Jounalist\": \"Jounalist\",\r\n        \"Category\": \"Category\",\r\n        \"Program\": \"Program\",\r\n        \"Rights\": \"Rights\"\r\n    },\r\n    \"PeriodicParameter\": {\r\n        \"startDate\": \"2021-06-27T19:13:14.000z\",\r\n        \"endDate\": \"2021-07-20 19:13:14\",\r\n        \"periodic\": true,\r\n        \"params\": [\r\n            4,\r\n            1,\r\n            3\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update ingestion task (ScheduledRecording type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea9594ff-d5dd-468b-a92b-bb943eba89a9",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2661,\r",
									"                \"title\": \"Wilson_test_update\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2321,\r",
									"                \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName_up\",\r",
									"                    \"comments\": \"Comments_up\",\r",
									"                    \"jounalist\": \"Jounalist_up\",\r",
									"                    \"category\": \"Category_up\",\r",
									"                    \"program\": \"Program_up\",\r",
									"                    \"rights\": \"Rights_up\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2661,\r",
									"                    \"title\": \"Wilson_test_update\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2321,\r",
									"                    \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName_up\",\r",
									"                        \"comments\": \"Comments_up\",\r",
									"                        \"jounalist\": \"Jounalist_up\",\r",
									"                        \"category\": \"Category_up\",\r",
									"                        \"program\": \"Program_up\",\r",
									"                        \"rights\": \"Rights_up\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2661\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson_test_update\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2321\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-06 20:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName_up\",\r",
									"                            \"comments\": \"Comments_up\",\r",
									"                            \"jounalist\": \"Jounalist_up\",\r",
									"                            \"category\": \"Category_up\",\r",
									"                            \"program\": \"Program_up\",\r",
									"                            \"rights\": \"Rights_up\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights_up\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{ScheduledRecording}}\",\r\n    \"title\": \"Wilson_test_update\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"channelId\": 2,\r\n    \"signalId\": 2321,\r\n    \"startDate\": \"2020-07-03T12:13:14.275Z\",\r\n    \"endDate\": \"2020-07-03T14:13:14.275Z\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName_up\",\r\n        \"Comments\": \"Comments_up\",\r\n        \"Jounalist\": \"Jounalist_up\",\r\n        \"Category\": \"Category_up\",\r\n        \"Program\": \"Program_up\",\r\n        \"Rights\":\"Rights_up\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update ingestion task (ManualStart type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6e44afa-fe55-4bed-9bf4-d71cfd2705e4",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2661,\r",
									"                \"title\": \"Wilson_test_update\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2321,\r",
									"                \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName_up\",\r",
									"                    \"comments\": \"Comments_up\",\r",
									"                    \"jounalist\": \"Jounalist_up\",\r",
									"                    \"category\": \"Category_up\",\r",
									"                    \"program\": \"Program_up\",\r",
									"                    \"rights\": \"Rights_up\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2661,\r",
									"                    \"title\": \"Wilson_test_update\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2321,\r",
									"                    \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName_up\",\r",
									"                        \"comments\": \"Comments_up\",\r",
									"                        \"jounalist\": \"Jounalist_up\",\r",
									"                        \"category\": \"Category_up\",\r",
									"                        \"program\": \"Program_up\",\r",
									"                        \"rights\": \"Rights_up\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2661\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson_test_update\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2321\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-06 20:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName_up\",\r",
									"                            \"comments\": \"Comments_up\",\r",
									"                            \"jounalist\": \"Jounalist_up\",\r",
									"                            \"category\": \"Category_up\",\r",
									"                            \"program\": \"Program_up\",\r",
									"                            \"rights\": \"Rights_up\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights_up\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{ManualStart}}\",\r\n    \"title\": \"Wilson_test_update\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"channelId\": 2,\r\n    \"signalId\": 2321,\r\n    \"startDate\": \"2020-07-03T12:13:14.275Z\",\r\n    \"endDate\": \"2020-07-03T14:13:14.275Z\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName_up\",\r\n        \"Comments\": \"Comments_up\",\r\n        \"Jounalist\": \"Jounalist_up\",\r\n        \"Category\": \"Category_up\",\r\n        \"Program\": \"Program_up\",\r\n        \"Rights\":\"Rights_up\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update ingestion task (Periodic type)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33ed8715-827f-4ef1-99fd-8aa713e35a39",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": 2661,\r",
									"                \"title\": \"Wilson_test_update\",\r",
									"                \"recordingType\": \"PeriodicWeekly\",\r",
									"                \"channelId\": 2,\r",
									"                \"signalId\": 2321,\r",
									"                \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"itemName\": \"ItemName_up\",\r",
									"                    \"comments\": \"Comments_up\",\r",
									"                    \"jounalist\": \"Jounalist_up\",\r",
									"                    \"category\": \"Category_up\",\r",
									"                    \"program\": \"Program_up\",\r",
									"                    \"rights\": \"Rights_up\"\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                    \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                    \"periodic\": true\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": 2661,\r",
									"                    \"title\": \"Wilson_test_update\",\r",
									"                    \"recordingType\": \"PeriodicWeekly\",\r",
									"                    \"channelId\": 2,\r",
									"                    \"signalId\": 2321,\r",
									"                    \"startTime\": \"2020-07-06 20:13:14\",\r",
									"                    \"endTime\": \"2020-07-20 22:13:14\",\r",
									"                    \"ingestMetadataModel\": {\r",
									"                        \"itemName\": \"ItemName_up\",\r",
									"                        \"comments\": \"Comments_up\",\r",
									"                        \"jounalist\": \"Jounalist_up\",\r",
									"                        \"category\": \"Category_up\",\r",
									"                        \"program\": \"Program_up\",\r",
									"                        \"rights\": \"Rights_up\"\r",
									"                    },\r",
									"                    \"periodicParameter\": {\r",
									"                        \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                        \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                        \"periodic\": true\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"title\",\r",
									"                \"recordingType\",\r",
									"                \"channelId\",\r",
									"                \"signalId\",\r",
									"                \"startTime\",\r",
									"                \"endTime\",\r",
									"                \"ingestMetadataModel\",\r",
									"                \"periodicParameter\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2661\r",
									"                    ]\r",
									"                },\r",
									"                \"title\": {\r",
									"                    \"$id\": \"#/properties/data/properties/title\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The title schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson_test_update\"\r",
									"                    ]\r",
									"                },\r",
									"                \"recordingType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/recordingType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The recordingType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"PeriodicWeekly\"\r",
									"                    ]\r",
									"                },\r",
									"                \"channelId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/channelId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The channelId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2\r",
									"                    ]\r",
									"                },\r",
									"                \"signalId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/signalId\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The signalId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        2321\r",
									"                    ]\r",
									"                },\r",
									"                \"startTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-06 20:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endTime\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endTime\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endTime schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-20 22:13:14\"\r",
									"                    ]\r",
									"                },\r",
									"                \"ingestMetadataModel\": {\r",
									"                    \"$id\": \"#/properties/data/properties/ingestMetadataModel\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The ingestMetadataModel schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"itemName\": \"ItemName_up\",\r",
									"                            \"comments\": \"Comments_up\",\r",
									"                            \"jounalist\": \"Jounalist_up\",\r",
									"                            \"category\": \"Category_up\",\r",
									"                            \"program\": \"Program_up\",\r",
									"                            \"rights\": \"Rights_up\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"itemName\",\r",
									"                        \"comments\",\r",
									"                        \"jounalist\",\r",
									"                        \"category\",\r",
									"                        \"program\",\r",
									"                        \"rights\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ItemName_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Comments_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"jounalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/jounalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The jounalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Jounalist_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"program\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/program\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The program schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Program_up\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/ingestMetadataModel/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Rights_up\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                },\r",
									"                \"periodicParameter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/periodicParameter\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The periodicParameter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"startDate\": \"2020-06-27 19:13:14\",\r",
									"                            \"endDate\": \"2020-07-20 19:13:14\",\r",
									"                            \"periodic\": true\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"startDate\",\r",
									"                        \"endDate\",\r",
									"                        \"periodic\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"startDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/startDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The startDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-06-27 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"endDate\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/endDate\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The endDate schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"2020-07-20 19:13:14\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"periodic\": {\r",
									"                            \"$id\": \"#/properties/data/properties/periodicParameter/properties/periodic\",\r",
									"                            \"type\": \"boolean\",\r",
									"                            \"title\": \"The periodic schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": false,\r",
									"                            \"examples\": [\r",
									"                                true\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{ingestId}}\",\r\n    \"title\": \"Wilson_test_update\",\r\n    \"startDate\": \"2020-07-03T12:13:14.275Z\",\r\n    \"endDate\": \"2020-07-03T14:13:14.275Z\",\r\n    \"ingestMetadataModel\": {\r\n        \"ItemName\": \"ItemName_up\",\r\n        \"Comments\": \"Comments_up\",\r\n        \"Jounalist\": \"Jounalist_up\",\r\n        \"Category\": \"Category_up\",\r\n        \"Program\": \"Program_up\",\r\n        \"Rights\":\"Rights_up\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Delete ingestion task by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "124d2a62-75f0-4351-b196-f699dc9842b0",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/ingest/ingest('4745')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"ingest",
								"ingest('4745')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rundown",
			"item": [
				{
					"name": "Get all rundowns",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1964f57-182c-455b-86b5-69974ad1fce8",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                    \"name\": \"2222\",\r",
									"                    \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a5ac3721-ce7a-4a67-b1a5-6f7319df4f95\",\r",
									"                    \"name\": \"11\",\r",
									"                    \"createDate\": \"2020-02-19T15:40:33.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"60d72095-67a6-4313-83b5-4857ff878548\",\r",
									"                    \"name\": \"1\",\r",
									"                    \"createDate\": \"2020-02-20T15:04:11.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-20T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"4570869d-6443-4a7e-a5b8-9cbcca2330aa\",\r",
									"                    \"name\": \"2\",\r",
									"                    \"createDate\": \"2020-02-21T10:16:04.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"213d3a13-ae64-49e6-a72e-3973ba849b12\",\r",
									"                    \"name\": \"D&D\",\r",
									"                    \"createDate\": \"2020-02-24T14:01:56.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-24T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7342c419-521e-48cc-838d-275751f8a050\",\r",
									"                    \"name\": \"D&D\",\r",
									"                    \"createDate\": \"2020-02-24T15:40:06.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-02-24T15:40:06.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a7c171bd-ff12-450f-be00-b9a1b87df784\",\r",
									"                    \"name\": \"new\",\r",
									"                    \"createDate\": \"2020-03-05T15:44:45.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-03-05T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"13db1c6e-fac7-464b-bdff-d20f764e7fde\",\r",
									"                    \"name\": \"6577\",\r",
									"                    \"createDate\": \"2020-08-04T17:00:06.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-04T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7895e1db-dd75-4ada-a848-79c4fac2cc5c\",\r",
									"                    \"name\": \"111\",\r",
									"                    \"createDate\": \"2020-08-19T10:25:13.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"9d6933ad-4838-4460-b898-4977c5831f04\",\r",
									"                    \"name\": \"wfg\",\r",
									"                    \"createDate\": \"2020-08-21T13:44:53.000Z\",\r",
									"                    \"studioName\": \"StudioA\",\r",
									"                    \"studioMosId\": \"sony.studioA.mos\",\r",
									"                    \"playDate\": \"2020-08-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"1ed4941b-d870-4f07-8032-032099d28806\",\r",
									"                    \"name\": \"smart\",\r",
									"                    \"createDate\": \"2019-08-21T20:45:31.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-08-21T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"e6378108-5ae0-4bb6-8db3-ee5985036e14\",\r",
									"                    \"name\": \"pppp\",\r",
									"                    \"createDate\": \"2019-08-22T18:05:18.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-08-22T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"7a24ad25-0a7a-440a-b3b9-eab78f72b0dd\",\r",
									"                    \"name\": \"To oa folder\",\r",
									"                    \"createDate\": \"2019-11-06T23:25:20.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-06T00:00:00.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a1a63f48-b020-42e2-8e09-af23afba7d10\",\r",
									"                    \"name\": \"yu1115\",\r",
									"                    \"createDate\": \"2019-11-16T00:58:38.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-16T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"256ab101-5199-47e8-b50c-e87f7a70ede2\",\r",
									"                    \"name\": \"hcx-1116\",\r",
									"                    \"createDate\": \"2019-11-16T01:59:23.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-16T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"eb1c7ce7-efc6-4509-a1cb-0e94aaacfee6\",\r",
									"                    \"name\": \"hcx-1118\",\r",
									"                    \"createDate\": \"2019-11-18T18:18:38.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-18T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"20e5804c-18fa-4adb-8b9c-05410399940c\",\r",
									"                    \"name\": \"cc\",\r",
									"                    \"createDate\": \"2019-11-19T02:30:15.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a197aa05-1343-40ea-ad81-fdacf3150dda\",\r",
									"                    \"name\": \"yu_1118\",\r",
									"                    \"createDate\": \"2019-11-19T02:30:21.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T02:30:21.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"68c8f0a2-e713-490a-b4b5-754abd3fa529\",\r",
									"                    \"name\": \"hcx-1119\",\r",
									"                    \"createDate\": \"2019-11-19T18:21:09.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2019-11-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"2daf0ef5-a601-4eeb-a469-4e6413d7efde\",\r",
									"                    \"name\": \"123\",\r",
									"                    \"createDate\": \"2020-02-19T15:47:48.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"0a9c5a69-2bf7-4d3c-994b-344c35168220\",\r",
									"                    \"name\": \"0512\",\r",
									"                    \"createDate\": \"2020-05-12T10:29:32.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-05-12T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"ENPS1;P_NEWSW;A3721C3F-98D9-483A-A6941AE4B7908D1E\",\r",
									"                    \"name\": \"CU - Afvikling\",\r",
									"                    \"createDate\": \"2020-07-24T18:56:39.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-07-24T09:00:00.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"ed0cc017-e4ba-4e4b-8f40-5edf37757875\",\r",
									"                    \"name\": \"dd\",\r",
									"                    \"createDate\": \"2020-08-04T18:49:53.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-04T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"a4076cf7-9f38-46c6-98d7-9a49d69631c0\",\r",
									"                    \"name\": \"1111\",\r",
									"                    \"createDate\": \"2020-08-12T16:18:23.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-12T23:59:59.000Z\"\r",
									"                },\r",
									"                {\r",
									"                    \"id\": \"e06b81a1-e407-41e0-9639-bfcb5a2eb1e1\",\r",
									"                    \"name\": \"1111\",\r",
									"                    \"createDate\": \"2020-08-17T11:16:08.000Z\",\r",
									"                    \"studioName\": \"StudioB\",\r",
									"                    \"studioMosId\": \"sony.studioB.mos\",\r",
									"                    \"playDate\": \"2020-08-17T23:59:59.000Z\"\r",
									"                }\r",
									"            ],\r",
									"            \"requestId\": \"0HM27V5E7LN8E:00000001\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\",\r",
									"        \"requestId\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                        \"name\": \"2222\",\r",
									"                        \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                        \"studioName\": \"StudioA\",\r",
									"                        \"studioMosId\": \"sony.studioA.mos\",\r",
									"                        \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"a5ac3721-ce7a-4a67-b1a5-6f7319df4f95\",\r",
									"                        \"name\": \"11\",\r",
									"                        \"createDate\": \"2020-02-19T15:40:33.000Z\",\r",
									"                        \"studioName\": \"StudioA\",\r",
									"                        \"studioMosId\": \"sony.studioA.mos\",\r",
									"                        \"playDate\": \"2020-02-19T23:59:59.000Z\"\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/data/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"id\": \"ad730281-ab65-4cac-8c6f-faece6b71e93\",\r",
									"                                \"name\": \"2222\",\r",
									"                                \"createDate\": \"2020-01-10T14:41:35.000Z\",\r",
									"                                \"studioName\": \"StudioA\",\r",
									"                                \"studioMosId\": \"sony.studioA.mos\",\r",
									"                                \"playDate\": \"2020-01-10T23:59:59.000Z\"\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"id\",\r",
									"                            \"name\",\r",
									"                            \"createDate\",\r",
									"                            \"studioName\",\r",
									"                            \"studioMosId\",\r",
									"                            \"playDate\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"id\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/id\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The id schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"ad730281-ab65-4cac-8c6f-faece6b71e93\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"name\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/name\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The name schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2222\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"createDate\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/createDate\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The createDate schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-01-10T14:41:35.000Z\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"studioName\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/studioName\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The studioName schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"StudioA\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"studioMosId\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/studioMosId\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The studioMosId schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"sony.studioA.mos\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"playDate\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/playDate\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The playDate schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"2020-01-10T23:59:59.000Z\"\r",
									"                                ]\r",
									"                            }\r",
									"                        },\r",
									"                        \"additionalProperties\": true\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"requestId\": {\r",
									"            \"$id\": \"#/properties/requestId\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The requestId schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"0HM27V5E7LN8E:00000001\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"pm.environment.set(\"rundownId\", jsonData.data[1].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/rundowns",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"rundowns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get stories by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa0f4db6-21e0-4475-bf53-6125c8c3facd",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": [\r",
									"                {\r",
									"                    \"storyTitle\": \"No Name Story\",\r",
									"                    \"events\": [\r",
									"                        {\r",
									"                            \"eventTitle\": \"No Name Story\",\r",
									"                            \"materialId\": \"\",\r",
									"                            \"materialTitle\": \"\",\r",
									"                            \"duration\": 0,\r",
									"                            \"som\": 0,\r",
									"                            \"eom\": 0,\r",
									"                            \"version\": \"0/0\",\r",
									"                            \"channel\": \"\",\r",
									"                            \"status\": \"Idle\"\r",
									"                        }\r",
									"                    ]\r",
									"                }\r",
									"            ],\r",
									"            \"requestId\": \"0HM27VB1OM0DS:00000001\"\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\",\r",
									"        \"requestId\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"array\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": [],\r",
									"            \"examples\": [\r",
									"                [\r",
									"                    {\r",
									"                        \"storyTitle\": \"No Name Story\",\r",
									"                        \"events\": [\r",
									"                            {\r",
									"                                \"eventTitle\": \"No Name Story\",\r",
									"                                \"materialId\": \"\",\r",
									"                                \"materialTitle\": \"\",\r",
									"                                \"duration\": 0,\r",
									"                                \"som\": 0,\r",
									"                                \"eom\": 0,\r",
									"                                \"version\": \"0/0\",\r",
									"                                \"channel\": \"\",\r",
									"                                \"status\": \"Idle\"\r",
									"                            }\r",
									"                        ]\r",
									"                    }\r",
									"                ]\r",
									"            ],\r",
									"            \"additionalItems\": true,\r",
									"            \"items\": {\r",
									"                \"$id\": \"#/properties/data/items\",\r",
									"                \"anyOf\": [\r",
									"                    {\r",
									"                        \"$id\": \"#/properties/data/items/anyOf/0\",\r",
									"                        \"type\": \"object\",\r",
									"                        \"title\": \"The first anyOf schema\",\r",
									"                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                        \"default\": {},\r",
									"                        \"examples\": [\r",
									"                            {\r",
									"                                \"storyTitle\": \"No Name Story\",\r",
									"                                \"events\": [\r",
									"                                    {\r",
									"                                        \"eventTitle\": \"No Name Story\",\r",
									"                                        \"materialId\": \"\",\r",
									"                                        \"materialTitle\": \"\",\r",
									"                                        \"duration\": 0,\r",
									"                                        \"som\": 0,\r",
									"                                        \"eom\": 0,\r",
									"                                        \"version\": \"0/0\",\r",
									"                                        \"channel\": \"\",\r",
									"                                        \"status\": \"Idle\"\r",
									"                                    }\r",
									"                                ]\r",
									"                            }\r",
									"                        ],\r",
									"                        \"required\": [\r",
									"                            \"storyTitle\",\r",
									"                            \"events\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"storyTitle\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/storyTitle\",\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"The storyTitle schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": \"\",\r",
									"                                \"examples\": [\r",
									"                                    \"No Name Story\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"events\": {\r",
									"                                \"$id\": \"#/properties/data/items/anyOf/0/properties/events\",\r",
									"                                \"type\": \"array\",\r",
									"                                \"title\": \"The events schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": [],\r",
									"                                \"examples\": [\r",
									"                                    [\r",
									"                                        {\r",
									"                                            \"eventTitle\": \"No Name Story\",\r",
									"                                            \"materialId\": \"\",\r",
									"                                            \"materialTitle\": \"\",\r",
									"                                            \"duration\": 0,\r",
									"                                            \"som\": 0,\r",
									"                                            \"eom\": 0,\r",
									"                                            \"version\": \"0/0\",\r",
									"                                            \"channel\": \"\",\r",
									"                                            \"status\": \"Idle\"\r",
									"                                        }\r",
									"                                    ]\r",
									"                                ],\r",
									"                                \"additionalItems\": true,\r",
									"                                \"items\": {\r",
									"                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items\",\r",
									"                                    \"anyOf\": [\r",
									"                                        {\r",
									"                                            \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0\",\r",
									"                                            \"type\": \"object\",\r",
									"                                            \"title\": \"The first anyOf schema\",\r",
									"                                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                            \"default\": {},\r",
									"                                            \"examples\": [\r",
									"                                                {\r",
									"                                                    \"eventTitle\": \"No Name Story\",\r",
									"                                                    \"materialId\": \"\",\r",
									"                                                    \"materialTitle\": \"\",\r",
									"                                                    \"duration\": 0,\r",
									"                                                    \"som\": 0,\r",
									"                                                    \"eom\": 0,\r",
									"                                                    \"version\": \"0/0\",\r",
									"                                                    \"channel\": \"\",\r",
									"                                                    \"status\": \"Idle\"\r",
									"                                                }\r",
									"                                            ],\r",
									"                                            \"required\": [\r",
									"                                                \"eventTitle\",\r",
									"                                                \"materialId\",\r",
									"                                                \"materialTitle\",\r",
									"                                                \"duration\",\r",
									"                                                \"som\",\r",
									"                                                \"eom\",\r",
									"                                                \"version\",\r",
									"                                                \"channel\",\r",
									"                                                \"status\"\r",
									"                                            ],\r",
									"                                            \"properties\": {\r",
									"                                                \"eventTitle\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/eventTitle\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The eventTitle schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"No Name Story\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"materialId\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/materialId\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The materialId schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"materialTitle\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/materialTitle\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The materialTitle schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"duration\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/duration\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The duration schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"som\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/som\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The som schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"eom\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/eom\",\r",
									"                                                    \"type\": \"integer\",\r",
									"                                                    \"title\": \"The eom schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": 0,\r",
									"                                                    \"examples\": [\r",
									"                                                        0\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"version\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/version\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The version schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"0/0\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"channel\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/channel\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The channel schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"\"\r",
									"                                                    ]\r",
									"                                                },\r",
									"                                                \"status\": {\r",
									"                                                    \"$id\": \"#/properties/data/items/anyOf/0/properties/events/items/anyOf/0/properties/status\",\r",
									"                                                    \"type\": \"string\",\r",
									"                                                    \"title\": \"The status schema\",\r",
									"                                                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                                    \"default\": \"\",\r",
									"                                                    \"examples\": [\r",
									"                                                        \"Idle\"\r",
									"                                                    ]\r",
									"                                                }\r",
									"                                            },\r",
									"                                            \"additionalProperties\": true\r",
									"                                        }\r",
									"                                    ]\r",
									"                                }\r",
									"                            }\r",
									"                        },\r",
									"                        \"additionalProperties\": true\r",
									"                    }\r",
									"                ]\r",
									"            }\r",
									"        },\r",
									"        \"requestId\": {\r",
									"            \"$id\": \"#/properties/requestId\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The requestId schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"0HM27VB1OM0DS:00000001\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"additionalProperties\": true\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/rundown('{{rundownId}}')/stories",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"rundown('{{rundownId}}')",
								"stories"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Planning",
			"item": [
				{
					"name": "✔️List all plannings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c5b7364-bb93-44fa-af67-6a7c9e9047b9",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"result\": [\r",
									"                    {\r",
									"                        \"id\": \"7d62631681fb4f3699a90f8c6aa148fa\",\r",
									"                        \"folderId\": \"d08ccb8d75ab4a5188a7ef16f360e10e\",\r",
									"                        \"planningName\": \"Untitled Ingest (12-06-2020 06_54_37)\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"2020-12-06 00:00:01\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                        \"createDate\": \"2020-06-12 06:54:37\",\r",
									"                        \"modifyDate\": \"2020-06-12 06:54:37\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"()_+-=\",\r",
									"                        \"sourceType\": \"VTR\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"7f1925989ae54643904008d0d89c952d\",\r",
									"                        \"planningName\": \"\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"7fadb433c2ba4094b28eca243f606ae8\",\r",
									"                        \"folderId\": \"71585e1669aa44839a9de570e9a51e10\",\r",
									"                        \"planningName\": \"Untitled Ingest(2020-02-18 11_25_09)\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"Espa?a\",\r",
									"                        \"planningDate\": \"2014-09-30 00:00:00\",\r",
									"                        \"startDate\": \"2014-09-30 00:00:00\",\r",
									"                        \"endDate\": \"2014-09-30 00:00:00\",\r",
									"                        \"createDate\": \"2020-02-18 11:26:01\",\r",
									"                        \"modifyDate\": \"2020-02-18 11:26:01\",\r",
									"                        \"director\": \"Clausura museo\",\r",
									"                        \"photographer\": \"Madrid\",\r",
									"                        \"reporter\": \"Juan\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"623\",\r",
									"                        \"contactInfo\": \"No Discos 3: Disco1, Disco7 y Disco 12\",\r",
									"                        \"inputSource\": \"Antonio\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"8181caa3c3fd4731b59c7b26b969f59a\",\r",
									"                        \"planningName\": \"\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"81fd235dc1344d9ab612ce7a66f61036\",\r",
									"                        \"planningName\": \"\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"82551c146ed747179fef8bd946313fe4\",\r",
									"                        \"planningName\": \"\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"82f6630e8e2748acae12b80c864e7615\",\r",
									"                        \"planningName\": \"\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"833ad6aeb3494fc2911ffc34286cf67d\",\r",
									"                        \"folderId\": \"9b28ea96bd0e4f59b2ea811bcc899b76\",\r",
									"                        \"planningName\": \"fda\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"asdf\",\r",
									"                        \"planningDate\": \"2020-01-17 17:17:17\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                        \"createDate\": \"2020-01-17 17:17:27\",\r",
									"                        \"modifyDate\": \"2020-01-17 17:17:27\",\r",
									"                        \"director\": \"\",\r",
									"                        \"photographer\": \"\",\r",
									"                        \"reporter\": \"\",\r",
									"                        \"otherEngineer\": \"\",\r",
									"                        \"equipment\": \"\",\r",
									"                        \"contactInfo\": \"\",\r",
									"                        \"inputSource\": \"-!@#$%^&*()+-=[]\\\\{}|;':\\\",./<>?\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {\r",
									"                            \"rights\": \"fsd\",\r",
									"                            \"comments\": \"dff\"\r",
									"                        }\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"838889247ef74cd397375dca592c4d80\",\r",
									"                        \"folderId\": \"9b28ea96bd0e4f59b2ea811bcc899b76\",\r",
									"                        \"planningName\": \"x\",\r",
									"                        \"inputBy\": \"x\",\r",
									"                        \"place\": \"x\",\r",
									"                        \"planningDate\": \"2019-12-30 14:13:16\",\r",
									"                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"createDate\": \"2019-12-30 14:13:34\",\r",
									"                        \"modifyDate\": \"2019-12-30 14:37:43\",\r",
									"                        \"director\": \"x\",\r",
									"                        \"photographer\": \"x\",\r",
									"                        \"reporter\": \"x\",\r",
									"                        \"otherEngineer\": \"x\",\r",
									"                        \"equipment\": \"x\",\r",
									"                        \"contactInfo\": \"x\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"FILE\",\r",
									"                        \"metadata\": {\r",
									"                            \"rights\": \"x\",\r",
									"                            \"comments\": \"200000000000000000000\",\r",
									"                            \"itemName\": \"x\",\r",
									"                            \"journalist\": \"x\",\r",
									"                            \"category\": \"x\",\r",
									"                            \"programName\": \"x\"\r",
									"                        }\r",
									"                    },\r",
									"                    {\r",
									"                        \"id\": \"85a6acf694d843fe80c3fcc973961483\",\r",
									"                        \"planningName\": \"Untitled Ingest(24-03-2020 10_41_38)\",\r",
									"                        \"inputBy\": \"\",\r",
									"                        \"place\": \"Chengdu\",\r",
									"                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"startDate\": \"2020-03-05 10:30:00\",\r",
									"                        \"endDate\": \"2020-03-05 10:40:00\",\r",
									"                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                        \"modifyDate\": \"2020-03-05 09:34:55\",\r",
									"                        \"director\": \"Joe\",\r",
									"                        \"photographer\": \"Joe\",\r",
									"                        \"reporter\": \"Joe\",\r",
									"                        \"otherEngineer\": \"Joe\",\r",
									"                        \"equipment\": \"Camera\",\r",
									"                        \"contactInfo\": \"Sobey\",\r",
									"                        \"inputSource\": \"\",\r",
									"                        \"sourceType\": \"SDI\",\r",
									"                        \"metadata\": {}\r",
									"                    }\r",
									"                ],\r",
									"                \"page\": 24,\r",
									"                \"size\": 10,\r",
									"                \"totalCount\": 471,\r",
									"                \"totalPage\": 48,\r",
									"                \"elapsed\": 1897\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"result\": [\r",
									"                        {\r",
									"                            \"id\": \"7d62631681fb4f3699a90f8c6aa148fa\",\r",
									"                            \"folderId\": \"d08ccb8d75ab4a5188a7ef16f360e10e\",\r",
									"                            \"planningName\": \"Untitled Ingest (12-06-2020 06_54_37)\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"2020-12-06 00:00:01\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                            \"createDate\": \"2020-06-12 06:54:37\",\r",
									"                            \"modifyDate\": \"2020-06-12 06:54:37\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"()_+-=\",\r",
									"                            \"sourceType\": \"VTR\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"7f1925989ae54643904008d0d89c952d\",\r",
									"                            \"planningName\": \"\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"7fadb433c2ba4094b28eca243f606ae8\",\r",
									"                            \"folderId\": \"71585e1669aa44839a9de570e9a51e10\",\r",
									"                            \"planningName\": \"Untitled Ingest(2020-02-18 11_25_09)\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"Espa?a\",\r",
									"                            \"planningDate\": \"2014-09-30 00:00:00\",\r",
									"                            \"startDate\": \"2014-09-30 00:00:00\",\r",
									"                            \"endDate\": \"2014-09-30 00:00:00\",\r",
									"                            \"createDate\": \"2020-02-18 11:26:01\",\r",
									"                            \"modifyDate\": \"2020-02-18 11:26:01\",\r",
									"                            \"director\": \"Clausura museo\",\r",
									"                            \"photographer\": \"Madrid\",\r",
									"                            \"reporter\": \"Juan\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"623\",\r",
									"                            \"contactInfo\": \"No Discos 3: Disco1, Disco7 y Disco 12\",\r",
									"                            \"inputSource\": \"Antonio\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"8181caa3c3fd4731b59c7b26b969f59a\",\r",
									"                            \"planningName\": \"\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"81fd235dc1344d9ab612ce7a66f61036\",\r",
									"                            \"planningName\": \"\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"82551c146ed747179fef8bd946313fe4\",\r",
									"                            \"planningName\": \"\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"82f6630e8e2748acae12b80c864e7615\",\r",
									"                            \"planningName\": \"\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"833ad6aeb3494fc2911ffc34286cf67d\",\r",
									"                            \"folderId\": \"9b28ea96bd0e4f59b2ea811bcc899b76\",\r",
									"                            \"planningName\": \"fda\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"asdf\",\r",
									"                            \"planningDate\": \"2020-01-17 17:17:17\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                            \"createDate\": \"2020-01-17 17:17:27\",\r",
									"                            \"modifyDate\": \"2020-01-17 17:17:27\",\r",
									"                            \"director\": \"\",\r",
									"                            \"photographer\": \"\",\r",
									"                            \"reporter\": \"\",\r",
									"                            \"otherEngineer\": \"\",\r",
									"                            \"equipment\": \"\",\r",
									"                            \"contactInfo\": \"\",\r",
									"                            \"inputSource\": \"-!@#$%^&*()+-=[]\\\\{}|;':\\\",./<>?\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {\r",
									"                                \"rights\": \"fsd\",\r",
									"                                \"comments\": \"dff\"\r",
									"                            }\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"838889247ef74cd397375dca592c4d80\",\r",
									"                            \"folderId\": \"9b28ea96bd0e4f59b2ea811bcc899b76\",\r",
									"                            \"planningName\": \"x\",\r",
									"                            \"inputBy\": \"x\",\r",
									"                            \"place\": \"x\",\r",
									"                            \"planningDate\": \"2019-12-30 14:13:16\",\r",
									"                            \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"createDate\": \"2019-12-30 14:13:34\",\r",
									"                            \"modifyDate\": \"2019-12-30 14:37:43\",\r",
									"                            \"director\": \"x\",\r",
									"                            \"photographer\": \"x\",\r",
									"                            \"reporter\": \"x\",\r",
									"                            \"otherEngineer\": \"x\",\r",
									"                            \"equipment\": \"x\",\r",
									"                            \"contactInfo\": \"x\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"FILE\",\r",
									"                            \"metadata\": {\r",
									"                                \"rights\": \"x\",\r",
									"                                \"comments\": \"200000000000000000000\",\r",
									"                                \"itemName\": \"x\",\r",
									"                                \"journalist\": \"x\",\r",
									"                                \"category\": \"x\",\r",
									"                                \"programName\": \"x\"\r",
									"                            }\r",
									"                        },\r",
									"                        {\r",
									"                            \"id\": \"85a6acf694d843fe80c3fcc973961483\",\r",
									"                            \"planningName\": \"Untitled Ingest(24-03-2020 10_41_38)\",\r",
									"                            \"inputBy\": \"\",\r",
									"                            \"place\": \"Chengdu\",\r",
									"                            \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"startDate\": \"2020-03-05 10:30:00\",\r",
									"                            \"endDate\": \"2020-03-05 10:40:00\",\r",
									"                            \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                            \"modifyDate\": \"2020-03-05 09:34:55\",\r",
									"                            \"director\": \"Joe\",\r",
									"                            \"photographer\": \"Joe\",\r",
									"                            \"reporter\": \"Joe\",\r",
									"                            \"otherEngineer\": \"Joe\",\r",
									"                            \"equipment\": \"Camera\",\r",
									"                            \"contactInfo\": \"Sobey\",\r",
									"                            \"inputSource\": \"\",\r",
									"                            \"sourceType\": \"SDI\",\r",
									"                            \"metadata\": {}\r",
									"                        }\r",
									"                    ],\r",
									"                    \"page\": 24,\r",
									"                    \"size\": 10,\r",
									"                    \"totalCount\": 471,\r",
									"                    \"totalPage\": 48,\r",
									"                    \"elapsed\": 1897\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"result\",\r",
									"                \"page\",\r",
									"                \"size\",\r",
									"                \"totalCount\",\r",
									"                \"totalPage\",\r",
									"                \"elapsed\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"result\": {\r",
									"                    \"$id\": \"#/properties/data/properties/result\",\r",
									"                    \"type\": \"array\",\r",
									"                    \"title\": \"The result schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": [],\r",
									"                    \"examples\": [\r",
									"                        [\r",
									"                            {\r",
									"                                \"id\": \"7d62631681fb4f3699a90f8c6aa148fa\",\r",
									"                                \"folderId\": \"d08ccb8d75ab4a5188a7ef16f360e10e\",\r",
									"                                \"planningName\": \"Untitled Ingest (12-06-2020 06_54_37)\",\r",
									"                                \"inputBy\": \"\",\r",
									"                                \"place\": \"\",\r",
									"                                \"planningDate\": \"2020-12-06 00:00:01\",\r",
									"                                \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                                \"createDate\": \"2020-06-12 06:54:37\",\r",
									"                                \"modifyDate\": \"2020-06-12 06:54:37\",\r",
									"                                \"director\": \"\",\r",
									"                                \"photographer\": \"\",\r",
									"                                \"reporter\": \"\",\r",
									"                                \"otherEngineer\": \"\",\r",
									"                                \"equipment\": \"\",\r",
									"                                \"contactInfo\": \"\",\r",
									"                                \"inputSource\": \"()_+-=\",\r",
									"                                \"sourceType\": \"VTR\",\r",
									"                                \"metadata\": {}\r",
									"                            },\r",
									"                            {\r",
									"                                \"id\": \"7f1925989ae54643904008d0d89c952d\",\r",
									"                                \"planningName\": \"\",\r",
									"                                \"inputBy\": \"\",\r",
									"                                \"place\": \"\",\r",
									"                                \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                                \"director\": \"\",\r",
									"                                \"photographer\": \"\",\r",
									"                                \"reporter\": \"\",\r",
									"                                \"otherEngineer\": \"\",\r",
									"                                \"equipment\": \"\",\r",
									"                                \"contactInfo\": \"\",\r",
									"                                \"inputSource\": \"\",\r",
									"                                \"sourceType\": \"SDI\",\r",
									"                                \"metadata\": {}\r",
									"                            }\r",
									"                        ]\r",
									"                    ],\r",
									"                    \"additionalItems\": true,\r",
									"                    \"items\": {\r",
									"                        \"anyOf\": [\r",
									"                            {\r",
									"                                \"$id\": \"#/properties/data/properties/result/items/anyOf/0\",\r",
									"                                \"type\": \"object\",\r",
									"                                \"title\": \"The first anyOf schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": {},\r",
									"                                \"examples\": [\r",
									"                                    {\r",
									"                                        \"id\": \"7d62631681fb4f3699a90f8c6aa148fa\",\r",
									"                                        \"folderId\": \"d08ccb8d75ab4a5188a7ef16f360e10e\",\r",
									"                                        \"planningName\": \"Untitled Ingest (12-06-2020 06_54_37)\",\r",
									"                                        \"inputBy\": \"\",\r",
									"                                        \"place\": \"\",\r",
									"                                        \"planningDate\": \"2020-12-06 00:00:01\",\r",
									"                                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"endDate\": \"1899-12-30 00:10:00\",\r",
									"                                        \"createDate\": \"2020-06-12 06:54:37\",\r",
									"                                        \"modifyDate\": \"2020-06-12 06:54:37\",\r",
									"                                        \"director\": \"\",\r",
									"                                        \"photographer\": \"\",\r",
									"                                        \"reporter\": \"\",\r",
									"                                        \"otherEngineer\": \"\",\r",
									"                                        \"equipment\": \"\",\r",
									"                                        \"contactInfo\": \"\",\r",
									"                                        \"inputSource\": \"()_+-=\",\r",
									"                                        \"sourceType\": \"VTR\",\r",
									"                                        \"metadata\": {}\r",
									"                                    }\r",
									"                                ],\r",
									"                                \"required\": [\r",
									"                                    \"id\",\r",
									"                                    \"folderId\",\r",
									"                                    \"planningName\",\r",
									"                                    \"inputBy\",\r",
									"                                    \"place\",\r",
									"                                    \"planningDate\",\r",
									"                                    \"startDate\",\r",
									"                                    \"endDate\",\r",
									"                                    \"createDate\",\r",
									"                                    \"modifyDate\",\r",
									"                                    \"director\",\r",
									"                                    \"photographer\",\r",
									"                                    \"reporter\",\r",
									"                                    \"otherEngineer\",\r",
									"                                    \"equipment\",\r",
									"                                    \"contactInfo\",\r",
									"                                    \"inputSource\",\r",
									"                                    \"sourceType\",\r",
									"                                    \"metadata\"\r",
									"                                ],\r",
									"                                \"additionalProperties\": true,\r",
									"                                \"properties\": {\r",
									"                                    \"id\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/id\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The id schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"7d62631681fb4f3699a90f8c6aa148fa\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"folderId\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/folderId\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The folderId schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"d08ccb8d75ab4a5188a7ef16f360e10e\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"planningName\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/planningName\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The planningName schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"Untitled Ingest (12-06-2020 06_54_37)\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"inputBy\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/inputBy\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The inputBy schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"place\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/place\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The place schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"planningDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/planningDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The planningDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"2020-12-06 00:00:01\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"startDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/startDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The startDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"endDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/endDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The endDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:10:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"createDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/createDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The createDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"2020-06-12 06:54:37\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"modifyDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/modifyDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The modifyDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"2020-06-12 06:54:37\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"director\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/director\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The director schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"photographer\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/photographer\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The photographer schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"reporter\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/reporter\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The reporter schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"otherEngineer\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/otherEngineer\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The otherEngineer schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"equipment\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/equipment\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The equipment schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"contactInfo\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/contactInfo\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The contactInfo schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"inputSource\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/inputSource\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The inputSource schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"()_+-=\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"sourceType\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/sourceType\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The sourceType schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"VTR\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"metadata\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/0/properties/metadata\",\r",
									"                                        \"type\": \"object\",\r",
									"                                        \"title\": \"The metadata schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": {},\r",
									"                                        \"examples\": [\r",
									"                                            {}\r",
									"                                        ],\r",
									"                                        \"required\": [],\r",
									"                                        \"additionalProperties\": true,\r",
									"                                        \"properties\": {}\r",
									"                                    }\r",
									"                                }\r",
									"                            },\r",
									"                            {\r",
									"                                \"$id\": \"#/properties/data/properties/result/items/anyOf/1\",\r",
									"                                \"type\": \"object\",\r",
									"                                \"title\": \"The second anyOf schema\",\r",
									"                                \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                \"default\": {},\r",
									"                                \"examples\": [\r",
									"                                    {\r",
									"                                        \"id\": \"7f1925989ae54643904008d0d89c952d\",\r",
									"                                        \"planningName\": \"\",\r",
									"                                        \"inputBy\": \"\",\r",
									"                                        \"place\": \"\",\r",
									"                                        \"planningDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"startDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"endDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"createDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"modifyDate\": \"1899-12-30 00:00:00\",\r",
									"                                        \"director\": \"\",\r",
									"                                        \"photographer\": \"\",\r",
									"                                        \"reporter\": \"\",\r",
									"                                        \"otherEngineer\": \"\",\r",
									"                                        \"equipment\": \"\",\r",
									"                                        \"contactInfo\": \"\",\r",
									"                                        \"inputSource\": \"\",\r",
									"                                        \"sourceType\": \"SDI\",\r",
									"                                        \"metadata\": {}\r",
									"                                    }\r",
									"                                ],\r",
									"                                \"required\": [\r",
									"                                    \"id\",\r",
									"                                    \"planningName\",\r",
									"                                    \"inputBy\",\r",
									"                                    \"place\",\r",
									"                                    \"planningDate\",\r",
									"                                    \"startDate\",\r",
									"                                    \"endDate\",\r",
									"                                    \"createDate\",\r",
									"                                    \"modifyDate\",\r",
									"                                    \"director\",\r",
									"                                    \"photographer\",\r",
									"                                    \"reporter\",\r",
									"                                    \"otherEngineer\",\r",
									"                                    \"equipment\",\r",
									"                                    \"contactInfo\",\r",
									"                                    \"inputSource\",\r",
									"                                    \"sourceType\",\r",
									"                                    \"metadata\"\r",
									"                                ],\r",
									"                                \"additionalProperties\": true,\r",
									"                                \"properties\": {\r",
									"                                    \"id\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/id\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The id schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"7f1925989ae54643904008d0d89c952d\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"planningName\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/planningName\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The planningName schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"inputBy\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/inputBy\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The inputBy schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"place\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/place\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The place schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"planningDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/planningDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The planningDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"startDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/startDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The startDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"endDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/endDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The endDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"createDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/createDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The createDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"modifyDate\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/modifyDate\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The modifyDate schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"1899-12-30 00:00:00\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"director\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/director\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The director schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"photographer\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/photographer\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The photographer schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"reporter\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/reporter\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The reporter schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"otherEngineer\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/otherEngineer\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The otherEngineer schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"equipment\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/equipment\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The equipment schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"contactInfo\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/contactInfo\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The contactInfo schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"inputSource\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/inputSource\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The inputSource schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"sourceType\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/sourceType\",\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"title\": \"The sourceType schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"examples\": [\r",
									"                                            \"SDI\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"metadata\": {\r",
									"                                        \"$id\": \"#/properties/data/properties/result/items/anyOf/1/properties/metadata\",\r",
									"                                        \"type\": \"object\",\r",
									"                                        \"title\": \"The metadata schema\",\r",
									"                                        \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                                        \"default\": {},\r",
									"                                        \"examples\": [\r",
									"                                            {}\r",
									"                                        ],\r",
									"                                        \"required\": [],\r",
									"                                        \"additionalProperties\": true,\r",
									"                                        \"properties\": {}\r",
									"                                    }\r",
									"                                }\r",
									"                            }\r",
									"                        ],\r",
									"                        \"$id\": \"#/properties/data/properties/result/items\"\r",
									"                    }\r",
									"                },\r",
									"                \"page\": {\r",
									"                    \"$id\": \"#/properties/data/properties/page\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The page schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        24\r",
									"                    ]\r",
									"                },\r",
									"                \"size\": {\r",
									"                    \"$id\": \"#/properties/data/properties/size\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The size schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        10\r",
									"                    ]\r",
									"                },\r",
									"                \"totalCount\": {\r",
									"                    \"$id\": \"#/properties/data/properties/totalCount\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The totalCount schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        471\r",
									"                    ]\r",
									"                },\r",
									"                \"totalPage\": {\r",
									"                    \"$id\": \"#/properties/data/properties/totalPage\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The totalPage schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        48\r",
									"                    ]\r",
									"                },\r",
									"                \"elapsed\": {\r",
									"                    \"$id\": \"#/properties/data/properties/elapsed\",\r",
									"                    \"type\": \"integer\",\r",
									"                    \"title\": \"The elapsed schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": 0,\r",
									"                    \"examples\": [\r",
									"                        1897\r",
									"                    ]\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/planning/plannings?size=11&page=1&startdate=2020-05-01 13:22:11&enddate=2020-10-04T13:15:00.000z&type=file",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"planning",
								"plannings"
							],
							"query": [
								{
									"key": "size",
									"value": "11"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "startdate",
									"value": "2020-05-01 13:22:11"
								},
								{
									"key": "enddate",
									"value": "2020-10-04T13:15:00.000z"
								},
								{
									"key": "type",
									"value": "file"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Create planning",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be3e46aa-c6ac-4ff6-b79b-2454a477a3ea",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"planningName\": \"Wilson' test\",\r",
									"                \"inputBy\": \"input\",\r",
									"                \"place\": \"place\",\r",
									"                \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                \"director\": \"director\",\r",
									"                \"photographer\": \"photoGrapher\",\r",
									"                \"reporter\": \"reporter\",\r",
									"                \"otherEngineer\": \"otherEngineer\",\r",
									"                \"equipment\": \"equipment\",\r",
									"                \"contactInfo\": \"contactInfo\",\r",
									"                \"inputSource\": \"ss\",\r",
									"                \"sourceType\": \"LIVE\",\r",
									"                \"metadata\": {\r",
									"                    \"rights\": \"rights\",\r",
									"                    \"comments\": \"comments\",\r",
									"                    \"itemName\": \"itemName\",\r",
									"                    \"journalist\": \"Journalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"programName\": \"ProgramName\",\r",
									"                    \"tapeBarcode\": \"TapeBarcode\",\r",
									"                    \"tapeTitle\": \"tapeTitle\"\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"planningName\": \"Wilson' test\",\r",
									"                    \"inputBy\": \"input\",\r",
									"                    \"place\": \"place\",\r",
									"                    \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                    \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"director\": \"director\",\r",
									"                    \"photographer\": \"photoGrapher\",\r",
									"                    \"reporter\": \"reporter\",\r",
									"                    \"otherEngineer\": \"otherEngineer\",\r",
									"                    \"equipment\": \"equipment\",\r",
									"                    \"contactInfo\": \"contactInfo\",\r",
									"                    \"inputSource\": \"ss\",\r",
									"                    \"sourceType\": \"LIVE\",\r",
									"                    \"metadata\": {\r",
									"                        \"rights\": \"rights\",\r",
									"                        \"comments\": \"comments\",\r",
									"                        \"itemName\": \"itemName\",\r",
									"                        \"journalist\": \"Journalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"programName\": \"ProgramName\",\r",
									"                        \"tapeBarcode\": \"TapeBarcode\",\r",
									"                        \"tapeTitle\": \"tapeTitle\"\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"folderId\",\r",
									"                \"planningName\",\r",
									"                \"inputBy\",\r",
									"                \"place\",\r",
									"                \"planningDate\",\r",
									"                \"startDate\",\r",
									"                \"endDate\",\r",
									"                \"createDate\",\r",
									"                \"modifyDate\",\r",
									"                \"director\",\r",
									"                \"photographer\",\r",
									"                \"reporter\",\r",
									"                \"otherEngineer\",\r",
									"                \"equipment\",\r",
									"                \"contactInfo\",\r",
									"                \"inputSource\",\r",
									"                \"sourceType\",\r",
									"                \"metadata\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"cbd055b43ed84d239b806b225b72374d\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningName\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningName\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningName schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson' test\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputBy\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputBy\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputBy schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"input\"\r",
									"                    ]\r",
									"                },\r",
									"                \"place\": {\r",
									"                    \"$id\": \"#/properties/data/properties/place\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The place schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"place\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"startDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:35\"\r",
									"                    ]\r",
									"                },\r",
									"                \"createDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/createDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The createDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"modifyDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/modifyDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The modifyDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"director\": {\r",
									"                    \"$id\": \"#/properties/data/properties/director\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The director schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"director\"\r",
									"                    ]\r",
									"                },\r",
									"                \"photographer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/photographer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The photographer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"photoGrapher\"\r",
									"                    ]\r",
									"                },\r",
									"                \"reporter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/reporter\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The reporter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"reporter\"\r",
									"                    ]\r",
									"                },\r",
									"                \"otherEngineer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/otherEngineer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The otherEngineer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"otherEngineer\"\r",
									"                    ]\r",
									"                },\r",
									"                \"equipment\": {\r",
									"                    \"$id\": \"#/properties/data/properties/equipment\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The equipment schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"equipment\"\r",
									"                    ]\r",
									"                },\r",
									"                \"contactInfo\": {\r",
									"                    \"$id\": \"#/properties/data/properties/contactInfo\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The contactInfo schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"contactInfo\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputSource\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputSource\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputSource schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"ss\"\r",
									"                    ]\r",
									"                },\r",
									"                \"sourceType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/sourceType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The sourceType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"LIVE\"\r",
									"                    ]\r",
									"                },\r",
									"                \"metadata\": {\r",
									"                    \"$id\": \"#/properties/data/properties/metadata\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The metadata schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"rights\": \"rights\",\r",
									"                            \"comments\": \"comments\",\r",
									"                            \"itemName\": \"itemName\",\r",
									"                            \"journalist\": \"Journalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"programName\": \"ProgramName\",\r",
									"                            \"tapeBarcode\": \"TapeBarcode\",\r",
									"                            \"tapeTitle\": \"tapeTitle\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"rights\",\r",
									"                        \"comments\",\r",
									"                        \"itemName\",\r",
									"                        \"journalist\",\r",
									"                        \"category\",\r",
									"                        \"programName\",\r",
									"                        \"tapeBarcode\",\r",
									"                        \"tapeTitle\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"rights\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"itemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"journalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/journalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The journalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Journalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"programName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/programName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The programName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ProgramName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeBarcode\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeBarcode\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeBarcode schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"TapeBarcode\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeTitle\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeTitle\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeTitle schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"tapeTitle\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});\r",
									"pm.globals.set(\"planningID\", jsonData.data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Wilson' test\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"inputBy\": \"input\",\r\n    \"place\": \"place\",\r\n    \"planningDate\": \"2019-08-23T14:41:32.000Z\",\r\n    \"director\": \"director\",\r\n    \"photoGrapher\": \"photoGrapher\",\r\n    \"reporter\": \"reporter\",\r\n    \"otherEngineer\": \"otherEngineer\",\r\n    \"equipment\": \"equipment\",\r\n    \"contactInfo\": \"contactInfo\",\r\n    \"inputSource\": \"ss\",\r\n    \"startDate\": \"2019-08-23T14:41:32.000Z\",\r\n    \"endDate\": \"2019-08-23 14:41:35\",\r\n    \"sourceType\": \"LIVE\",\r\n    \"metadata\": {\r\n        \"rights\": \"rights\",\r\n        \"comments\": \"comments\",\r\n        \"itemName\": \"itemName\",\r\n        \"journalist\": \"Journalist\",\r\n        \"category\": \"Category\",\r\n        \"ProgramName\": \"ProgramName\",\r\n        \"tapeBarcode\": \"TapeBarcode\",\r\n        \"tapeTitle\": \"tapeTitle\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/planning/planning",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"planning",
								"planning"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Update planning",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28022687-46e0-4715-8f99-b3ecd06aa81b",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"planningName\": \"Wilson' test\",\r",
									"                \"inputBy\": \"input\",\r",
									"                \"place\": \"place\",\r",
									"                \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                \"director\": \"director\",\r",
									"                \"photographer\": \"photoGrapher\",\r",
									"                \"reporter\": \"reporter\",\r",
									"                \"otherEngineer\": \"otherEngineer\",\r",
									"                \"equipment\": \"equipment\",\r",
									"                \"contactInfo\": \"contactInfo\",\r",
									"                \"inputSource\": \"ss\",\r",
									"                \"sourceType\": \"LIVE\",\r",
									"                \"metadata\": {\r",
									"                    \"rights\": \"rights\",\r",
									"                    \"comments\": \"comments\",\r",
									"                    \"itemName\": \"itemName\",\r",
									"                    \"journalist\": \"Journalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"programName\": \"ProgramName\",\r",
									"                    \"tapeBarcode\": \"TapeBarcode\",\r",
									"                    \"tapeTitle\": \"tapeTitle\"\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"planningName\": \"Wilson' test\",\r",
									"                    \"inputBy\": \"input\",\r",
									"                    \"place\": \"place\",\r",
									"                    \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                    \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"director\": \"director\",\r",
									"                    \"photographer\": \"photoGrapher\",\r",
									"                    \"reporter\": \"reporter\",\r",
									"                    \"otherEngineer\": \"otherEngineer\",\r",
									"                    \"equipment\": \"equipment\",\r",
									"                    \"contactInfo\": \"contactInfo\",\r",
									"                    \"inputSource\": \"ss\",\r",
									"                    \"sourceType\": \"LIVE\",\r",
									"                    \"metadata\": {\r",
									"                        \"rights\": \"rights\",\r",
									"                        \"comments\": \"comments\",\r",
									"                        \"itemName\": \"itemName\",\r",
									"                        \"journalist\": \"Journalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"programName\": \"ProgramName\",\r",
									"                        \"tapeBarcode\": \"TapeBarcode\",\r",
									"                        \"tapeTitle\": \"tapeTitle\"\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"folderId\",\r",
									"                \"planningName\",\r",
									"                \"inputBy\",\r",
									"                \"place\",\r",
									"                \"planningDate\",\r",
									"                \"startDate\",\r",
									"                \"endDate\",\r",
									"                \"createDate\",\r",
									"                \"modifyDate\",\r",
									"                \"director\",\r",
									"                \"photographer\",\r",
									"                \"reporter\",\r",
									"                \"otherEngineer\",\r",
									"                \"equipment\",\r",
									"                \"contactInfo\",\r",
									"                \"inputSource\",\r",
									"                \"sourceType\",\r",
									"                \"metadata\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"cbd055b43ed84d239b806b225b72374d\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningName\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningName\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningName schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson' test\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputBy\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputBy\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputBy schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"input\"\r",
									"                    ]\r",
									"                },\r",
									"                \"place\": {\r",
									"                    \"$id\": \"#/properties/data/properties/place\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The place schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"place\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"startDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:35\"\r",
									"                    ]\r",
									"                },\r",
									"                \"createDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/createDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The createDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"modifyDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/modifyDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The modifyDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"director\": {\r",
									"                    \"$id\": \"#/properties/data/properties/director\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The director schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"director\"\r",
									"                    ]\r",
									"                },\r",
									"                \"photographer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/photographer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The photographer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"photoGrapher\"\r",
									"                    ]\r",
									"                },\r",
									"                \"reporter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/reporter\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The reporter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"reporter\"\r",
									"                    ]\r",
									"                },\r",
									"                \"otherEngineer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/otherEngineer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The otherEngineer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"otherEngineer\"\r",
									"                    ]\r",
									"                },\r",
									"                \"equipment\": {\r",
									"                    \"$id\": \"#/properties/data/properties/equipment\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The equipment schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"equipment\"\r",
									"                    ]\r",
									"                },\r",
									"                \"contactInfo\": {\r",
									"                    \"$id\": \"#/properties/data/properties/contactInfo\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The contactInfo schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"contactInfo\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputSource\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputSource\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputSource schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"ss\"\r",
									"                    ]\r",
									"                },\r",
									"                \"sourceType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/sourceType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The sourceType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"LIVE\"\r",
									"                    ]\r",
									"                },\r",
									"                \"metadata\": {\r",
									"                    \"$id\": \"#/properties/data/properties/metadata\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The metadata schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"rights\": \"rights\",\r",
									"                            \"comments\": \"comments\",\r",
									"                            \"itemName\": \"itemName\",\r",
									"                            \"journalist\": \"Journalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"programName\": \"ProgramName\",\r",
									"                            \"tapeBarcode\": \"TapeBarcode\",\r",
									"                            \"tapeTitle\": \"tapeTitle\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"rights\",\r",
									"                        \"comments\",\r",
									"                        \"itemName\",\r",
									"                        \"journalist\",\r",
									"                        \"category\",\r",
									"                        \"programName\",\r",
									"                        \"tapeBarcode\",\r",
									"                        \"tapeTitle\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"rights\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"itemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"journalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/journalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The journalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Journalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"programName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/programName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The programName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ProgramName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeBarcode\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeBarcode\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeBarcode schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"TapeBarcode\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeTitle\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeTitle\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeTitle schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"tapeTitle\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"e92ec1580cf94cb0a7496e25049af9d4\",\r\n    \"name\": \"Wilson' test\",\r\n    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r\n    \"inputBy\": \"input\",\r\n    \"place\": \"place\",\r\n    \"planningDate\": \"2019-08-23T15:41:32.000Z\",\r\n    \"director\": \"director\",\r\n    \"photoGrapher\": \"photoGrapher\",\r\n    \"reporter\": \"reporter\",\r\n    \"otherEngineer\": \"otherEngineer\",\r\n    \"equipment\": \"equipment\",\r\n    \"contactInfo\": \"contactInfo\",\r\n    \"inputSource\": \"ss\",\r\n    \"startDate\": \"2019-08-23T15:41:32.000Z\",\r\n    \"endDate\": \"2019-08-23 15:41:35\",\r\n    \"metadata\": {\r\n        \"rights\": \"rights\",\r\n        \"comments\": \"comments\",\r\n        \"itemName\": \"itemName\",\r\n        \"journalist\": \"Journalist\",\r\n        \"category\": \"Category\",\r\n        \"ProgramName\": \"ProgramName\",\r\n        \"tapeBarcode\": \"TapeBarcode\",\r\n        \"tapeTitle\": \"tapeTitle\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/planning/planning",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"planning",
								"planning"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Get planning by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01ac0b45-7428-4c3d-b5bc-183e674a7955",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var schema = {\r",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"title\": \"The root schema\",\r",
									"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
									"    \"default\": {},\r",
									"    \"examples\": [\r",
									"        {\r",
									"            \"status\": 200,\r",
									"            \"data\": {\r",
									"                \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                \"planningName\": \"Wilson' test\",\r",
									"                \"inputBy\": \"input\",\r",
									"                \"place\": \"place\",\r",
									"                \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                \"director\": \"director\",\r",
									"                \"photographer\": \"photoGrapher\",\r",
									"                \"reporter\": \"reporter\",\r",
									"                \"otherEngineer\": \"otherEngineer\",\r",
									"                \"equipment\": \"equipment\",\r",
									"                \"contactInfo\": \"contactInfo\",\r",
									"                \"inputSource\": \"ss\",\r",
									"                \"sourceType\": \"LIVE\",\r",
									"                \"metadata\": {\r",
									"                    \"rights\": \"rights\",\r",
									"                    \"comments\": \"comments\",\r",
									"                    \"itemName\": \"itemName\",\r",
									"                    \"journalist\": \"Journalist\",\r",
									"                    \"category\": \"Category\",\r",
									"                    \"programName\": \"ProgramName\",\r",
									"                    \"tapeBarcode\": \"TapeBarcode\",\r",
									"                    \"tapeTitle\": \"tapeTitle\"\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    ],\r",
									"    \"required\": [\r",
									"        \"status\",\r",
									"        \"data\"\r",
									"    ],\r",
									"    \"additionalProperties\": true,\r",
									"    \"properties\": {\r",
									"        \"status\": {\r",
									"            \"$id\": \"#/properties/status\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The status schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                200\r",
									"            ]\r",
									"        },\r",
									"        \"data\": {\r",
									"            \"$id\": \"#/properties/data\",\r",
									"            \"type\": \"object\",\r",
									"            \"title\": \"The data schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": {},\r",
									"            \"examples\": [\r",
									"                {\r",
									"                    \"id\": \"cbd055b43ed84d239b806b225b72374d\",\r",
									"                    \"folderId\": \"44669099251d4cd2a9d1546452acd078\",\r",
									"                    \"planningName\": \"Wilson' test\",\r",
									"                    \"inputBy\": \"input\",\r",
									"                    \"place\": \"place\",\r",
									"                    \"planningDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"startDate\": \"2019-08-23 14:41:32\",\r",
									"                    \"endDate\": \"2019-08-23 14:41:35\",\r",
									"                    \"createDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"modifyDate\": \"2020-07-01 16:11:21\",\r",
									"                    \"director\": \"director\",\r",
									"                    \"photographer\": \"photoGrapher\",\r",
									"                    \"reporter\": \"reporter\",\r",
									"                    \"otherEngineer\": \"otherEngineer\",\r",
									"                    \"equipment\": \"equipment\",\r",
									"                    \"contactInfo\": \"contactInfo\",\r",
									"                    \"inputSource\": \"ss\",\r",
									"                    \"sourceType\": \"LIVE\",\r",
									"                    \"metadata\": {\r",
									"                        \"rights\": \"rights\",\r",
									"                        \"comments\": \"comments\",\r",
									"                        \"itemName\": \"itemName\",\r",
									"                        \"journalist\": \"Journalist\",\r",
									"                        \"category\": \"Category\",\r",
									"                        \"programName\": \"ProgramName\",\r",
									"                        \"tapeBarcode\": \"TapeBarcode\",\r",
									"                        \"tapeTitle\": \"tapeTitle\"\r",
									"                    }\r",
									"                }\r",
									"            ],\r",
									"            \"required\": [\r",
									"                \"id\",\r",
									"                \"folderId\",\r",
									"                \"planningName\",\r",
									"                \"inputBy\",\r",
									"                \"place\",\r",
									"                \"planningDate\",\r",
									"                \"startDate\",\r",
									"                \"endDate\",\r",
									"                \"createDate\",\r",
									"                \"modifyDate\",\r",
									"                \"director\",\r",
									"                \"photographer\",\r",
									"                \"reporter\",\r",
									"                \"otherEngineer\",\r",
									"                \"equipment\",\r",
									"                \"contactInfo\",\r",
									"                \"inputSource\",\r",
									"                \"sourceType\",\r",
									"                \"metadata\"\r",
									"            ],\r",
									"            \"additionalProperties\": true,\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"$id\": \"#/properties/data/properties/id\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The id schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"cbd055b43ed84d239b806b225b72374d\"\r",
									"                    ]\r",
									"                },\r",
									"                \"folderId\": {\r",
									"                    \"$id\": \"#/properties/data/properties/folderId\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The folderId schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"44669099251d4cd2a9d1546452acd078\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningName\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningName\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningName schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"Wilson' test\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputBy\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputBy\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputBy schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"input\"\r",
									"                    ]\r",
									"                },\r",
									"                \"place\": {\r",
									"                    \"$id\": \"#/properties/data/properties/place\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The place schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"place\"\r",
									"                    ]\r",
									"                },\r",
									"                \"planningDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/planningDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The planningDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"startDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/startDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The startDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:32\"\r",
									"                    ]\r",
									"                },\r",
									"                \"endDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/endDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The endDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2019-08-23 14:41:35\"\r",
									"                    ]\r",
									"                },\r",
									"                \"createDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/createDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The createDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"modifyDate\": {\r",
									"                    \"$id\": \"#/properties/data/properties/modifyDate\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The modifyDate schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"2020-07-01 16:11:21\"\r",
									"                    ]\r",
									"                },\r",
									"                \"director\": {\r",
									"                    \"$id\": \"#/properties/data/properties/director\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The director schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"director\"\r",
									"                    ]\r",
									"                },\r",
									"                \"photographer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/photographer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The photographer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"photoGrapher\"\r",
									"                    ]\r",
									"                },\r",
									"                \"reporter\": {\r",
									"                    \"$id\": \"#/properties/data/properties/reporter\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The reporter schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"reporter\"\r",
									"                    ]\r",
									"                },\r",
									"                \"otherEngineer\": {\r",
									"                    \"$id\": \"#/properties/data/properties/otherEngineer\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The otherEngineer schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"otherEngineer\"\r",
									"                    ]\r",
									"                },\r",
									"                \"equipment\": {\r",
									"                    \"$id\": \"#/properties/data/properties/equipment\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The equipment schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"equipment\"\r",
									"                    ]\r",
									"                },\r",
									"                \"contactInfo\": {\r",
									"                    \"$id\": \"#/properties/data/properties/contactInfo\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The contactInfo schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"contactInfo\"\r",
									"                    ]\r",
									"                },\r",
									"                \"inputSource\": {\r",
									"                    \"$id\": \"#/properties/data/properties/inputSource\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The inputSource schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"ss\"\r",
									"                    ]\r",
									"                },\r",
									"                \"sourceType\": {\r",
									"                    \"$id\": \"#/properties/data/properties/sourceType\",\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"The sourceType schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": \"\",\r",
									"                    \"examples\": [\r",
									"                        \"LIVE\"\r",
									"                    ]\r",
									"                },\r",
									"                \"metadata\": {\r",
									"                    \"$id\": \"#/properties/data/properties/metadata\",\r",
									"                    \"type\": \"object\",\r",
									"                    \"title\": \"The metadata schema\",\r",
									"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                    \"default\": {},\r",
									"                    \"examples\": [\r",
									"                        {\r",
									"                            \"rights\": \"rights\",\r",
									"                            \"comments\": \"comments\",\r",
									"                            \"itemName\": \"itemName\",\r",
									"                            \"journalist\": \"Journalist\",\r",
									"                            \"category\": \"Category\",\r",
									"                            \"programName\": \"ProgramName\",\r",
									"                            \"tapeBarcode\": \"TapeBarcode\",\r",
									"                            \"tapeTitle\": \"tapeTitle\"\r",
									"                        }\r",
									"                    ],\r",
									"                    \"required\": [\r",
									"                        \"rights\",\r",
									"                        \"comments\",\r",
									"                        \"itemName\",\r",
									"                        \"journalist\",\r",
									"                        \"category\",\r",
									"                        \"programName\",\r",
									"                        \"tapeBarcode\",\r",
									"                        \"tapeTitle\"\r",
									"                    ],\r",
									"                    \"additionalProperties\": true,\r",
									"                    \"properties\": {\r",
									"                        \"rights\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/rights\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The rights schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"rights\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"comments\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/comments\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The comments schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"comments\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"itemName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/itemName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The itemName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"itemName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"journalist\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/journalist\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The journalist schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Journalist\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"category\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/category\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The category schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"Category\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"programName\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/programName\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The programName schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"ProgramName\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeBarcode\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeBarcode\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeBarcode schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"TapeBarcode\"\r",
									"                            ]\r",
									"                        },\r",
									"                        \"tapeTitle\": {\r",
									"                            \"$id\": \"#/properties/data/properties/metadata/properties/tapeTitle\",\r",
									"                            \"type\": \"string\",\r",
									"                            \"title\": \"The tapeTitle schema\",\r",
									"                            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"                            \"default\": \"\",\r",
									"                            \"examples\": [\r",
									"                                \"tapeTitle\"\r",
									"                            ]\r",
									"                        }\r",
									"                    }\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.test('Schema is valid', function() {\r",
									"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/planning/planning('{{planningID}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"planning",
								"planning('{{planningID}}')"
							]
						}
					},
					"response": []
				},
				{
					"name": "✔️Delete planning by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51383592-af4b-434b-aa39-5ac0e9d2a77f",
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/api/{{version}}/planning/planning('{{planningID}}')",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"{{version}}",
								"planning",
								"planning('{{planningID}}')"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}